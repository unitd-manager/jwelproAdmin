{"version":3,"sources":["views/detailTable/ContentDetails.js","layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["ContentDetails","useState","content","setContent","navigate","useNavigate","title","creation_date","moment","content_date","content_type","contentDetails","setContentDetails","sectionLinked","setSectionLinked","handleInputs","e","target","name","value","loggedInuser","useContext","AppContext","useEffect","api","get","then","res","data","console","log","md","className","type","onChange","section_id","selected","map","ele","section_title","tag","author_name","date","format","published_date","color","onClick","creationdatetime","created_by","first_name","post","insertedDataId","insertId","message","setTimeout","catch","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","Link","active","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"gQAgOeA,UApNQ,WAErB,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cACjB,EAA4CJ,mBAAS,CACnDK,MAAO,GACPC,cAAeC,MACfC,aAAcD,MACdE,aAAc,KAJhB,mBAAOC,EAAP,KAAuBC,EAAvB,KAMA,EAA0CX,qBAA1C,mBAAOY,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,SAACC,GACpBJ,EAAkB,2BAAKD,GAAN,kBAAuBK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG3DC,EAAiBC,qBAAWC,KAA5BF,aA6DR,OALAG,qBAAU,WA/CRC,IAAIC,IAAI,uBAAuBC,MAAK,SAACC,GACnCxB,EAAWwB,EAAIC,KAAKA,MACpBC,QAAQC,IAAI5B,MARdsB,IAAIC,IAAI,sBAAuBZ,GAAea,MAAK,SAACC,GAClDb,EAAiBa,EAAIC,KAAKA,WAuD3B,IAGD,gCACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,KAAD,UACE,cAAC,IAAD,CAAKG,GAAG,IAAR,SACE,cAAC,UAAD,CAAezB,MAAM,cAArB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKyB,GAAG,KAAR,UACE,eAAC,IAAD,mBAAY,sBAAMC,UAAU,WAAhB,gBAAZ,OACA,cAAC,IAAD,CACEC,KAAK,OACLC,SAAUnB,EACVI,MAAOR,GAAkBA,EAAeL,MACxCY,KAAK,aAGT,cAAC,IAAD,CAAKa,GAAG,KAAR,SAChB,eAAC,IAAD,WAEE,cAAC,IAAD,sBACA,eAAC,IAAD,CACEE,KAAK,SACLf,KAAK,aACLC,MAAOR,GAAkBA,EAAewB,WACxCD,SAAUnB,EAJZ,UAME,wBAAQI,MAAM,GAAGiB,SAAS,WAA1B,2BAGCvB,GACCA,EAAcwB,KAAI,SAACC,GACjB,OAAO,wBAAQnB,MAAOmB,EAAIH,WAAnB,SAAgCG,EAAIC,2BAMrD5B,IAEkC,6DAAjCA,EAAe4B,eACkB,sHAAjC5B,EAAe4B,eACkB,0EAAjC5B,EAAe4B,eACkB,0DAAjC5B,EAAe4B,eACkB,2EAAjC5B,EAAe4B,eAGkB,mEAAjC5B,EAAe4B,gBAEd,qCACA,cAAC,IAAD,CAAKR,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,kBACA,cAAC,IAAD,CACEE,KAAK,OACLC,SAAUnB,EACVI,MAAOR,GAAkBA,EAAe6B,IACxCtB,KAAK,aAIX,cAAC,IAAD,CAAKa,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,cAAC,IAAD,CACEE,KAAK,OACLC,SAAUnB,EACVI,MAAOR,GAAkBA,EAAe8B,YACxCvB,KAAK,qBAIX,cAAC,IAAD,CAAKa,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,CACEE,KAAK,OACLC,SAAUnB,EACVI,MAAOR,GAAkBH,IAAOG,EAAe+B,MAAMC,OAAO,cAC5DzB,KAAK,cAIX,cAAC,IAAD,CAAKa,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,6BACA,cAAC,IAAD,CACEE,KAAK,OACLC,SAAUnB,EACVI,MAAOR,GAAkBH,IAAOG,EAAeiC,gBAAgBD,OAAO,cACtEzB,KAAK,gCASC,cAAC,IAAD,UACE,cAAC,KAAD,UACE,sBAAKc,UAAU,4CAAf,UACE,cAAC,IAAD,CACEA,UAAU,cACVa,MAAM,UACNC,QAAS,WAxJE,KAAzBnC,EAAeL,OAEjBK,EAAeJ,cAAgBwC,IAC/BpC,EAAeqC,WAAY5B,EAAa6B,WACxCzB,IACG0B,KAAK,yBAA0BvC,GAC/Be,MAAK,SAACC,GACL,IAAMwB,EAAiBxB,EAAIC,KAAKA,KAAKwB,SACrCC,YAAQ,sCAAuC,WAC/CC,YAAW,WACTlD,EAAS,gBAAD,OAAiB+C,MACxB,QAEJI,OAAM,WACLF,YAAQ,2BAA4B,aAGxCA,YAAQ,mCAAoC,YAoI9B,kBAYA,cAAC,IAAD,CACEP,QAAS,WACP1C,GAAU,IAEZ6B,KAAK,SACLD,UAAU,2BALZ,yC,iCC7MpB,mCAwBewB,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIzB,IAAK0B,IAAMlC,UAAU,uBAA5C,kBAGC4B,EAAW,cAAC,IAAD,CAAgBO,QAAM,EAAtB,SAAwBP,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBI,QAAM,EAAtB,SAAwBJ,IAA8B,W,iCClB3E,oBAqDeV,IAlDC,SAACe,EAAInC,GACjB,MAAY,YAATA,EACOoC,IAAMC,QAAQF,EAAK,CACrBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,UAAT9C,EACMoC,IAAMW,MAAMZ,EAAK,CACnBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,SAAT9C,EACKoC,IAAMY,KAAKb,EAAK,CAClBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAEK,YAAT9C,EACMoC,IAAMa,QAAQd,EAAK,CACrBG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGRV,YAAMD,K,kEC7CV,SAASe,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAAT9E,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWkC,IAAI,KAAKR,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAM1B,IACL8E,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,gDAAmBA,GAAWA,EAAQpC,WAAtC,IAAmDoC,GAAWA,EAAQ7E,mBAExE,cAAC,KAAD,CAAKyB,UAAU,SAAf,SACE,gDAAmBoD,GAAWA,EAAQC,YAAtC,IAAoDD,GAAWA,EAAQE,iCCOxEC,UAvBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUlF,EAA+C,EAA/CA,MAAOmF,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAM1D,UAAU,cAAhB,UACE,cAACmD,EAAD,CAAsBC,QAASM,EAA0BpF,MAAOA,IAKhE,eAAC,IAAD,CAAU0B,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CyD,GAAY,KACvD,8BAAMD,Y,iCCdd,aAEMzC,EAFN,MAEyBvC,KAASmC,OAAO,wBAC1BI","file":"static/js/103.75b9e2d3.chunk.js","sourcesContent":["import React, {useContext, useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst ContentDetails = () => {\r\n  //All const variables\r\n  const [content, setContent] = useState();\r\n  const navigate = useNavigate();\r\n  const [contentDetails, setContentDetails] = useState({\r\n    title: '',\r\n    creation_date: moment(),\r\n    content_date: moment(),\r\n    content_type: '',\r\n  });\r\n  const [sectionLinked, setSectionLinked] = useState();\r\n  //setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //get staff details\r\n  const { loggedInuser } = useContext(AppContext);\r\n  // getting data from Section\r\n  const getsection = () => {\r\n    api.get('/content/getSection', sectionLinked).then((res) => {\r\n      setSectionLinked(res.data.data);\r\n    });\r\n  };\r\n  //getting data from content\r\n  const getContent = () => {\r\n    api.get('/content/getContent').then((res) => {\r\n      setContent(res.data.data);\r\n      console.log(content);\r\n    });\r\n  };\r\n  //Insert Content Data\r\n  const insertContentData = () => {\r\n    if (contentDetails.title !== '' )\r\n    {\r\n      contentDetails.creation_date = creationdatetime;\r\n      contentDetails.created_by= loggedInuser.first_name;   \r\n      api\r\n        .post('/content/insertContent', contentDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Content Data inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/ContentEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to insert record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n  // const insertContentData = () => {\r\n  //   if (contentDetails.title !== '') {\r\n  //     contentDetails.creation_date = creationdatetime;\r\n  //     contentDetails.created_by= loggedInuser.first_name;  \r\n  //     api\r\n  //       .post('/content/insertContent', contentDetails)\r\n  //       .then((res) => {\r\n  //         const insertedDataId = res.data.data.insertId;\r\n  //         message('Content inserted successfully.', 'success');\r\n  //         setTimeout(() => {\r\n  //           navigate(`/ContentEdit/${insertedDataId}`);\r\n  //         }, 300);\r\n  //       })\r\n  //       .catch(() => {\r\n  //         message('Network connection error.', 'error');\r\n  //       });\r\n  //   } else {\r\n  //     message('Please fill all required fields.', 'error');\r\n  //   }\r\n  // };\r\n  useEffect(() => {\r\n    getContent();\r\n    getsection();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Title<span className=\"required\"> *</span> </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={contentDetails && contentDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"12\">\r\n  <FormGroup>\r\n    {/* Section title from section table */}\r\n    <Label>Section</Label>\r\n    <Input\r\n      type=\"select\"\r\n      name=\"section_id\"\r\n      value={contentDetails && contentDetails.section_id}\r\n      onChange={handleInputs}\r\n    >\r\n      <option value=\"\" selected=\"selected\">\r\n        Please Select\r\n      </option>\r\n      {sectionLinked &&\r\n        sectionLinked.map((ele) => {\r\n          return <option value={ele.section_id}>{ele.section_title}</option>;\r\n        })}\r\n    </Input>\r\n  </FormGroup>\r\n</Col>\r\n{\r\ncontentDetails && (\r\n  // contentDetails.section_title === 'About Us / எங்களைப் பற்றி' ||\r\n contentDetails.section_title === 'Bayan / பயான்கள்' ||\r\n contentDetails.section_title === 'Mawlid Majlis / மௌலித் மஜ்லிஸ்கள்' ||\r\n contentDetails.section_title === 'Events / நிகழ்வுகள்' ||\r\n contentDetails.section_title === 'Magazine / மலர்கள்' ||\r\n contentDetails.section_title === 'Video Gallery / காணொளிகள்' || \r\n//  contentDetails.section_title === 'Photo Gallery / புகைப்படங்கள்' || \r\n//  contentDetails.section_title === 'Audio Gallery / ஆடியோக்கள்' ||\r\n contentDetails.section_title === 'Books / கிதாபுகள்' ) &&\r\n(\r\n  <>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>Tag</Label>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={handleInputs}\r\n        value={contentDetails && contentDetails.tag}\r\n        name=\"tag\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>Author Name</Label>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={handleInputs}\r\n        value={contentDetails && contentDetails.author_name}\r\n        name=\"author_name\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>Date</Label>\r\n      <Input\r\n        type=\"Date\"\r\n        onChange={handleInputs}\r\n        value={contentDetails && moment(contentDetails.date).format('YYYY-MM-DD')}\r\n        name=\"date\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>Published Date</Label>\r\n      <Input\r\n        type=\"Date\"\r\n        onChange={handleInputs}\r\n        value={contentDetails && moment(contentDetails.published_date).format('YYYY-MM-DD')}\r\n        name=\"published_date\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n\r\n  </>\r\n)}\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertContentData();\r\n                        // setTimeout(() => {\r\n                        //   navigate('/ContentEdit');\r\n                        // }, 800);\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate(-1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ContentDetails;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}