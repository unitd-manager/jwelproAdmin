{"version":3,"sources":["views/cubosale/EditProject.js","layouts/breadcrumbs/BreadCrumbs.js"],"names":["BasicForm","React","useState","company","setCompany","title","settitle","description","setdescription","startDate","setStartDate","estimatedFinishDate","setestimatedFinishDate","companyId","setcompanyId","file","setFile","id","useParams","getCompany","api","get","then","res","data","catch","err","console","log","post","project_id","company_id","start_date","useEffect","editProject","fd","FormData","append","status","alert","Swal","fire","text","icon","window","location","reload","md","className","tag","defaultValue","onInput","e","target","value","type","placeholder","defaultChecked","onChange","name","map","selected","company_name","event","files","onClick","BreadCrumbs","prop","useLocation","firstUrl","pathname","split","secondUrl","heading","to","Link","active"],"mappings":"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","file":"static/js/178.8564490d.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n\r\n  Button,\r\n\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2'\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../constants/api';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\n\r\n\r\n\r\nconst BasicForm = () => {\r\n  const [company, setCompany] = React.useState([])\r\n  const [title, settitle] = useState('')\r\n  const [description, setdescription] = useState('')\r\n\r\n  const [startDate, setStartDate] = useState('')\r\n  const [estimatedFinishDate, setestimatedFinishDate] = useState('')\r\n  const [companyId, setcompanyId] = useState('')\r\n  const [file, setFile] = useState(null)\r\n  // const [imgUrl, setImage] = useState('')\r\n  const { id } = useParams();\r\n  const getCompany = () => {\r\n    api \r\n      .get('/api/getCompany')\r\n      .then((res) => {\r\n        setCompany(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      api \r\n      .post('/api/getProjectById',{\r\n        project_id:id\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.data)\r\n        settitle(res.data.data.title);\r\n        setcompanyId(res.data.data.company_id);\r\n        setdescription(res.data.data.description)\r\n        setStartDate(res.data.data.start_date)\r\n        setestimatedFinishDate(res.data.data.start_date)\r\n       // setImage(res.data.data.attachment)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCompany()\r\n  \r\n    return () => {\r\n      getCompany()\r\n    }\r\n  }, [])\r\n  const editProject = async() =>{\r\n    if(title !== '' \r\n    && description !== '' \r\n    && startDate !== '' \r\n    && estimatedFinishDate !== '' \r\n    && companyId !== ''){\r\n      const fd = new FormData()\r\n      fd.append('title',title)\r\n      fd.append('description',description)\r\n      fd.append('start_date',startDate)\r\n      fd.append('estimated_finish_date',estimatedFinishDate)\r\n      fd.append('company_id',companyId)\r\n      fd.append('project_id',id)\r\n      if(file != null){\r\n        fd.append('attachment',file)\r\n      }\r\n      \r\n      api\r\n      .post('/attachment/edit-projects',fd)\r\n      .then((res) => {\r\n        \r\n        if(res && res.data.status === '400'){\r\n          alert('Cannot add project.')\r\n        }else{\r\n          Swal.fire({\r\n            title: 'Success',\r\n            text: 'Project Added!',\r\n            icon: 'success'\r\n          })\r\n           window.location.reload()\r\n        }\r\n        //navigate('/dashboards/classic');\r\n        // setLoginData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }else{\r\n      Swal.fire({\r\n        title: 'Field Missing',\r\n        text: 'Title,description & Dates are required',\r\n        icon: 'warning'\r\n      })\r\n    }\r\n    \r\n  }\r\n  const onFileChange = (event) =>{\r\n    setFile(event.target.files[0])\r\n  }\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Card>\r\n           \r\n            <CardBody className=\"bg-light\">\r\n              <CardTitle tag=\"h4\" className=\"mb-0\">\r\n                Project Info\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Title</Label>\r\n                      <Input \r\n                      defaultValue={title}\r\n                      onInput={e => settitle(e.target.value)}\r\n                      type=\"text\" placeholder=\"\" />\r\n                      \r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Description</Label>\r\n                      <Input defaultValue={description} onInput={e => setdescription(e.target.value)} type=\"text\" placeholder=\"\" />\r\n                      \r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Start Date</Label>\r\n                      <Input defaultValue={startDate} onInput={e => setStartDate(e.target.value)} type=\"date\" placeholder=\"DOB Here\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Estimated Finish Date</Label>\r\n                      <Input defaultValue={estimatedFinishDate} onInput={e => setestimatedFinishDate(e.target.value)} type=\"date\" placeholder=\"DOB Here\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row> \r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company</Label>\r\n                      <Input defaultChecked={companyId} onChange={e => setcompanyId(e.target.value)} type=\"select\" name=\"Select Category\">\r\n                        {company.map(data=>(\r\n                          <option key={data.company_id} selected={companyId === data.company_id && true} value={data.company_id}>{data.company_name}</option>\r\n                        ))}\r\n                        \r\n                      \r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Label>Attachments</Label>\r\n                    <FormGroup>\r\n                        \r\n                        <Input onChange={onFileChange} type=\"file\" placeholder=\"\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n     \r\n            <CardBody className=\"border-top gap-2 d-flex align-items-center\">\r\n              <Button onClick={()=>{editProject()}} type=\"submit\" className=\"btn btn-success\">\r\n                Save\r\n              </Button>\r\n              <Button type=\"button\" className=\"btn btn-dark ml-2\">\r\n                Cancel\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"sourceRoot":""}