{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/Scheme/SchemeMoreDetails.js","views/EditData/SchemeEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","../node_modules/react-feather/dist/icons/edit-2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","../node_modules/react-feather/dist/icons/file.js","components/Tab.js","../node_modules/react-feather/dist/icons/trash.js","components/Tender/AudioViewFileComponentV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","SchemeMoreDetails","schemeEditDetails","handleInputs","schemeStatus","md","onChange","value","name","amount","moment","start_date","format","end_date","status","selected","map","ele","valuelist_id","description","SchemeEdit","useState","setSchemeEditDetails","setSchemeStatus","activeTab","setActiveTab","pictureroomname","setPictureRoomName","attachmentroomname","setAttachmentRoomName","picturefiletypes","setPictureFileTypes","attachmentfiletypes","setAttachmentFileTypes","picturemodal","setPictureModal","attachmentModal","setAttachmentModal","modelType","attachmentData","setDataForAttachment","pictureData","setDataForPicture","pictureupdate","setPictureUpdate","attachmentupdate","setAttachmentUpdate","audioattachmentroomname","setAudioAttachmentRoomName","audioattachmentfiletypes","setAudioAttachmentFileTypes","audioattachmentModal","setAudioAttachmentModal","audioattachmentData","setAudioDataForAttachment","audioattachmentupdate","setAudioAttachmentUpdate","editaudiodatamodal","setEditAudioDataModal","addPurchaseOrderModal","setAddPurchaseOrderModal","addNewProductModal","setAddNewProductModal","productDetail","setProductDetail","contact_id","tenderForms","setTenderForms","company","setCompany","schemeContacts","setSchemeContacts","id","useParams","navigate","useNavigate","loggedInuser","useContext","AppContext","addContactToggle","handleNewProductDetails","e","target","editContentData","creationdatetime","first_name","api","post","then","catch","console","log","columns","selector","grow","wrap","width","sortable","cell","useEffect","scheme_id","res","data","get","ComponentCardV2","color","onClick","setTimeout","Tab","toggle","tab","tabs","tabId","bind","element","i","email","mobile","address1","ContactSchemeId","contact_scheme_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","window","reload","size","isOpen","handleInputsTenderForms","pass_word","insertedDataId","insertId","xs","AttachmentModalV2","moduleId","roomName","fileTypes","altTagData","desc","recordType","mediaType","update","setUpdate","ViewFileComponentV2","AudioViewFileComponentV2","pStyle","textAlign","marginRight","oStyle","outline","border","style","_extends","Object","assign","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit2","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","string","oneOfType","number","displayName","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","multiple","handleChange","fiels","arrayOfObj","entries","types","role","FormData","forEach","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","File","points","useSearchParams","searchParams","setSearchParams","Trash","getFiles","editaudiodetails","setEditAudioDetails","selectedmediaid","setSelectedMediaId","getAudioDataById","MediaId","defaultValue","author_name","date","published_date","rows","comments","content_id"],"mappings":"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","file":"static/js/58.9e699b5d.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport { Row, Col, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function SchemeMoreDetails({\r\n  schemeEditDetails,\r\n  handleInputs,\r\n  schemeStatus,\r\n  }) {\r\n  SchemeMoreDetails.propTypes = {\r\n    schemeEditDetails: PropTypes.object,\r\n    handleInputs: PropTypes.any,\r\n    schemeStatus: PropTypes.object,\r\n      };\r\n  return (\r\n    <div>\r\n   <ComponentCard title=\"Scheme Details\" creationModificationDate={schemeEditDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Title<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={schemeEditDetails && schemeEditDetails.title}\r\n                    name=\"title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Amount </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={schemeEditDetails && schemeEditDetails.amount}\r\n                    name=\"amount\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>Start Date</Label>\r\n      <Input\r\n        type=\"date\"\r\n        onChange={handleInputs}\r\n        value={schemeEditDetails && moment(schemeEditDetails.start_date).format('YYYY-MM-DD')}\r\n        name=\"start_date\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"3\">\r\n    <FormGroup>\r\n      <Label>End Date</Label>\r\n      <Input\r\n        type=\"date\"\r\n        onChange={handleInputs}\r\n        value={schemeEditDetails && moment(schemeEditDetails.end_date).format('YYYY-MM-DD')}\r\n        name=\"end_date\"\r\n      />\r\n    </FormGroup>\r\n  </Col>\r\n  <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Status </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={schemeEditDetails && schemeEditDetails.status}\r\n                    name=\"status\"\r\n                  >\r\n                    <option value=\"\" selected=\"selected\">\r\n        Please Select\r\n      </option>\r\n      {schemeStatus &&\r\n        schemeStatus.map((ele) => {\r\n          return <option value={ele.valuelist_id}>{ele.value}</option>;\r\n        })}\r\n    </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label> Description </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    onChange={handleInputs}\r\n                    value={schemeEditDetails && schemeEditDetails.description}\r\n                    name=\"description\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n  </Row>\r\n      </ComponentCard>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Form,\r\n  ModalFooter,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Input,\r\n  Col,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  TabContent,\r\n  TabPane,\r\n  Table\r\n} from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as Icon from 'react-feather';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport Swal from 'sweetalert2';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport AudioViewFileComponentV2 from '../../components/Tender/AudioViewFileComponentV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport Tab from '../../components/Tab';\r\nimport AppContext from '../../context/AppContext';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport SchemeMoreDetails from '../../components/Scheme/SchemeMoreDetails';\r\n\r\nconst SchemeEdit = () => {\r\n  // All state variables\r\n\r\n  const [schemeEditDetails, setSchemeEditDetails] = useState();\r\n  const [schemeStatus, setSchemeStatus] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [pictureroomname, setPictureRoomName] = useState('');\r\n  const [attachmentroomname, setAttachmentRoomName] = useState('');\r\n  const [picturefiletypes, setPictureFileTypes] = useState('');\r\n  const [attachmentfiletypes, setAttachmentFileTypes] = useState('');\r\n  const [picturemodal, setPictureModal] = useState(false);\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureupdate, setPictureUpdate] = useState(false);\r\n  const [attachmentupdate, setAttachmentUpdate] = useState(false);\r\n  const [audioattachmentroomname, setAudioAttachmentRoomName] = useState('');\r\n  const [audioattachmentfiletypes, setAudioAttachmentFileTypes] = useState('');\r\n  const [audioattachmentModal, setAudioAttachmentModal] = useState(false);\r\n  const [audioattachmentData, setAudioDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  const [audioattachmentupdate, setAudioAttachmentUpdate] = useState(false);\r\n  const [editaudiodatamodal, setEditAudioDataModal] = useState(null);\r\n  const [addPurchaseOrderModal, setAddPurchaseOrderModal] = useState();\r\n  const [addNewProductModal, setAddNewProductModal] = useState(false);\r\n  const [productDetail, setProductDetail] = useState();\r\n  const [tenderForms, setTenderForms] = useState({\r\n    contact_id: '',\r\n  });\r\n  const [company, setCompany] = useState();\r\n  const [schemeContacts, setSchemeContacts] = useState();\r\n  \r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const addContactToggle = () => {\r\n    setAddPurchaseOrderModal(!addPurchaseOrderModal);\r\n  };\r\n  const handleNewProductDetails = (e) => {\r\n    setProductDetail({ ...productDetail, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputsTenderForms = (e) => {\r\n    setTenderForms({ ...tenderForms, [e.target.name]: e.target.value });\r\n  };\r\n  //Attachments\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n  };\r\n  //Pictures\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n  //Audio Attachment\r\n  const dataForAudioAttachment = () => {\r\n    setAudioDataForAttachment({\r\n      modelType: 'audioattachment',\r\n    });\r\n  };\r\n\r\n  \r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  //Setting data in schemeEditDetails\r\n  const handleInputs = (e) => {\r\n    setSchemeEditDetails({ ...schemeEditDetails, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  // Get content data By content id\r\n  const getSchemeByID = () => {\r\n    api\r\n      .post('/scheme/getSchemeByID', { scheme_id: id })\r\n      .then((res) => {\r\n        setSchemeEditDetails(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    if (schemeEditDetails.title !== '') {\r\n      schemeEditDetails.modification_date = creationdatetime;\r\n      schemeEditDetails.modified_by = loggedInuser.first_name;\r\n      api\r\n        .post('/scheme/editScheme', schemeEditDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n  // getting data from ValueList\r\n  const getSchemeStatus = () => {\r\n    api.get('/scheme/getSchemeStatus', schemeStatus).then((res) => {\r\n      setSchemeStatus(res.data.data);\r\n    });\r\n  };\r\n  const tabs = [\r\n    { id: '1', name: 'Contact Linked' },\r\n    { id: '2', name: 'Attachment' },\r\n  ];\r\n\r\n  const insertContactData = () => {\r\n    if (productDetail.first_name !== '') {\r\n      productDetail.creation_date = creationdatetime;\r\n      productDetail.created_by = loggedInuser.first_name;\r\n      api\r\n        .post('/scheme/insertContact', productDetail)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          setTenderForms({ ...tenderForms, contact_id: insertedDataId });\r\n            setTenderForms({ ...tenderForms, contact_id: res.data.data.insertId }); // Set selected company ID after insertion\r\n          message('Contact inserted successfully.', 'success');\r\n          setAddNewProductModal(false);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'error');\r\n    }\r\n  };\r\n\r\n  const getSchemeContactsByID = () => {\r\n    api\r\n      .post('/scheme/getSchemeContactsByID', { scheme_id: id })\r\n      .then((res) => {\r\n        setSchemeContacts(res.data.data);\r\n        console.log('setSchemeContacts', res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Failed to fetch scheme contacts.', 'error');\r\n      });\r\n};\r\nconsole.log('SchemeContacts', schemeContacts);\r\n  const getContact = () => {\r\n    api.get('/scheme/getContact').then((res) => {\r\n      setCompany(res.data.data);\r\n      // if (res.data.data && res.data.data.length > 0) {\r\n      //   // Assuming the newly added company is at the end of the list\r\n      //   const newlyAddedCompanyId = res.data.data[res.data.data.length - 1].company_id;\r\n      //   setTenderForms({ ...tenderForms, company_id: newlyAddedCompanyId }); // Set the last company as selected\r\n      // }\r\n    });\r\n  };\r\n  const insertContactSchemeData = () => {\r\n    if (tenderForms.contact_id !== '') {\r\n      tenderForms.creation_date = creationdatetime;\r\n      tenderForms.created_by = loggedInuser.first_name;\r\n      tenderForms.scheme_id = id;\r\n\r\n      api\r\n        .post('/scheme/insertContactSchemeData', tenderForms)\r\n        .then(() => {\r\n          message('Contact inserted successfully.', 'success');\r\n          setAddPurchaseOrderModal(false);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'error');\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      name: 'id',\r\n      selector: 'contact_id',\r\n      grow: 0,\r\n      wrap: true,\r\n      width: '4%',\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: 'first_name',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    // {\r\n    //   name: arabic.find((item) => item.key_text === 'mdTradingContact.Email')?.[genLabel],\r\n    //   //name: 'Email',\r\n    //   selector: 'email',\r\n    //   sortable: true,\r\n    //   grow: 2,\r\n    //   wrap: true,\r\n    // },\r\n    {\r\n      name: 'Email',\r\n      //name: 'Phone(Direct)',\r\n      selector: 'email',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Phone',\r\n      selector: 'mobile',\r\n      sortable: true,\r\n      width: 'auto',\r\n      grow: 3,\r\n    },\r\n    {\r\n      name: 'Address',\r\n      selector: 'address1',\r\n      sortable: true,\r\n      width: 'auto',\r\n      grow: 3,\r\n    },\r\n    {\r\n      name: 'Del',\r\n      selector: 'delete',\r\n      cell: () => <Icon.Trash />,\r\n      grow: 0,\r\n      width: 'auto',\r\n      wrap: true,\r\n    },\r\n  ];\r\n\r\n  const deleteRecord = (ContactSchemeId) => {\r\n    Swal.fire({\r\n      title: `Are you sure? `,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/scheme/deleteContactSchemeData', { contact_scheme_id: ContactSchemeId })\r\n          .then(() => {\r\n            Swal.fire('Deleted!', 'Scheme COntact has been deleted.', 'success');\r\n            message('Record deleted successfully', 'success'); \r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 300);\r\n          })\r\n          .catch(() => {\r\n            message('Unable to delete record.', 'error');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSchemeByID();\r\n  }, [id]);\r\n  useEffect(() => {\r\n    getSchemeContactsByID();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    getSchemeStatus();\r\n    getContact();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={schemeEditDetails && schemeEditDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/Content');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/Content');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <SchemeMoreDetails\r\n            schemeEditDetails={schemeEditDetails}\r\n            handleInputs={handleInputs}\r\n            schemeStatus={schemeStatus}\r\n          ></SchemeMoreDetails>\r\n        </FormGroup>\r\n      </Form>\r\n      <ComponentCard title=\"More Details\">\r\n        <ToastContainer></ToastContainer>\r\n\r\n        <Tab toggle={toggle} tabs={tabs} />\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n        <Col md=\"3\">\r\n            <Button color=\"primary\" className=\"shadow-none\" onClick={addContactToggle.bind(null)}>\r\n            Add New Contact\r\n            </Button>\r\n            </Col>\r\n            <br />\r\n\r\n            <Row>\r\n              <Form>\r\n                <FormGroup>\r\n        <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map((cell) => {\r\n                return <td key={cell.name}>{cell.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {schemeContacts &&\r\n              schemeContacts.map((element, i) => {\r\n                return (\r\n                  <tr key={element.contact_scheme_id}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{element.first_name}</td>\r\n                    <td>{element.email}</td>\r\n                    <td>{element.mobile}</td>\r\n                    <td>{element.address1}</td>\r\n                    <td>\r\n                      <div color=\"primary\" className=\"anchor\"> \r\n                      <span onClick={() => deleteRecord(element.contact_scheme_id)}>\r\n                          <Icon.Trash2 />\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n        </FormGroup>\r\n        </Form>\r\n      </Row>\r\n            \r\n            <Modal size=\"lg\" isOpen={addPurchaseOrderModal} toggle={addContactToggle.bind(null)}>\r\n              <ModalHeader toggle={addContactToggle.bind(null)}>Link Contact to Scheme</ModalHeader>\r\n              <ModalBody>\r\n              <FormGroup>\r\n                <Row>\r\n                \r\n                  <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label>Contact</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={(e) => {\r\n                      setTenderForms({ ...tenderForms, contact_id: e.target.value });\r\n                      handleInputsTenderForms(e);\r\n                    }}\r\n                    //className={inputClass}\r\n                    value={tenderForms.contact_id}\r\n                    name=\"contact_id\"\r\n                  >\r\n                    <option value=\"selected\">Please Select</option>\r\n                    {company &&\r\n                      company.map((e) => {\r\n                        return (\r\n                          <option key={e.contact_id} value={e.contact_id}>\r\n                            {e.first_name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              \r\n                \r\n                <Col md=\"6\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"shadow-none\"\r\n                      onClick={() => {\r\n                        setAddNewProductModal(true);\r\n                      }}\r\n                    >\r\n                      Add New Contact\r\n                    </Button>\r\n                  </Col>\r\n                    </Row>\r\n                    <br />\r\n            \r\n              <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              insertContactSchemeData();\r\n            }}\r\n          >\r\n           Submit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              setAddPurchaseOrderModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n            \r\n            </FormGroup>\r\n            </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={addNewProductModal} >\r\n        <ModalHeader >Add New Contact</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"24\" className=\"mb-4\">\r\n                <Row>\r\n                  <FormGroup>\r\n                    <Row>\r\n                    <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleNewProductDetails}\r\n                    value={productDetail && productDetail.first_name}\r\n                    name=\"first_name\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n                      <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleNewProductDetails}\r\n                    value={productDetail && productDetail.mobile}\r\n                    name=\"mobile\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleNewProductDetails}\r\n                    value={productDetail && productDetail.email}\r\n                    name=\"email\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleNewProductDetails}\r\n                    value={productDetail && productDetail.pass_word}\r\n                    name=\"pass_word\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleNewProductDetails}\r\n                    value={productDetail && productDetail.address1}\r\n                    name=\"address1\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              insertContactData();\r\n            }}\r\n          >\r\n           Submit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              setAddNewProductModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n            </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            {/* Picture and Attachments Form */}\r\n\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"Picture\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setPictureRoomName('ContentPic');\r\n                          setPictureFileTypes(['JPG', 'JPEG', 'PNG', 'GIF']);\r\n                          dataForPicture();\r\n                          setPictureModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={picturemodal}\r\n                    setAttachmentModal={setPictureModal}\r\n                    roomName={pictureroomname}\r\n                    fileTypes={picturefiletypes}\r\n                    altTagData=\"Content Data\"\r\n                    desc=\"Content Data\"\r\n                    recordType=\"Picture\"\r\n                    mediaType={pictureData.modelType}\r\n                    update={pictureupdate}\r\n                    setUpdate={setPictureUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"Content\"\r\n                    recordType=\"Picture\"\r\n                    update={pictureupdate}\r\n                    setUpdate={setPictureUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"Attachments\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setAttachmentRoomName('ContentAttachment');\r\n                          setAttachmentFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={attachmentroomname}\r\n                    fileTypes={attachmentfiletypes}\r\n                    altTagData=\"ContentRelated Data\"\r\n                    desc=\"ContentRelated Data\"\r\n                    recordType=\"ContentRelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={attachmentupdate}\r\n                    setUpdate={setAttachmentUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"ContentAttachment\"\r\n                    recordType=\"ContentRelatedPicture\"\r\n                    update={attachmentupdate}\r\n                    setUpdate={setAttachmentUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"Audio Attachments\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setAudioAttachmentRoomName('ContentAudioAttachment');\r\n                          setAudioAttachmentFileTypes(['GIF', 'OGG', 'MP3', 'WAV', 'M4A']);\r\n                          dataForAudioAttachment();\r\n                          setAudioAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={audioattachmentModal}\r\n                    setAttachmentModal={setAudioAttachmentModal}\r\n                    roomName={audioattachmentroomname}\r\n                    fileTypes={audioattachmentfiletypes}\r\n                    altTagData=\"ContentRelated Data\"\r\n                    desc=\"ContentRelated Data\"\r\n                    recordType=\"ContentRelatedAudio\"\r\n                    mediaType={audioattachmentData.modelType}\r\n                    update={audioattachmentupdate}\r\n                    setUpdate={setAudioAttachmentUpdate}\r\n                    editaudiodatamodal={editaudiodatamodal}\r\n                    setEditAudioDataModal={setEditAudioDataModal}\r\n                  />\r\n                  <AudioViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"ContentAudioAttachment\"\r\n                    recordType=\"ContentRelatedAudio\"\r\n                    update={audioattachmentupdate}\r\n                    setUpdate={setAudioAttachmentUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n          </TabPane>\r\n          \r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default SchemeEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n  }));\n});\nEdit2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit2.displayName = 'Edit2';\nexport default Edit2;","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://emsweb.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar File = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"13 2 13 9 20 9\"\n  }));\n});\nFile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nFile.displayName = 'File';\nexport default File;","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }));\n});\nTrash.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash.displayName = 'Trash';\nexport default Trash;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Card, CardBody,Row,Col,Form,FormGroup,Label,Input,Button,Modal,ModalHeader,ModalBody, ModalFooter, } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName,update,setUpdate }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n    update:PropTypes.bool,\r\n    setUpdate:PropTypes.func\r\n  };\r\n\r\n  const tableStyle = {};\r\n  const [getFile, setGetFile] = useState(null);\r\n  \r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            setUpdate(!update)\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n  const [editaudiodatamodal, setEditAudioDataModal] = useState();\r\n  const [editaudiodetails, setEditAudioDetails] = useState(null);\r\n  const [selectedmediaid, setSelectedMediaId] = useState(null);\r\n\r\n\r\n  //edit Tab Costing Summary Form\r\n\r\n  const handleInputs = (e) => {\r\n      setEditAudioDetails({...editaudiodetails, [e.target.name]:e.target.value});\r\n    }\r\n// Set staff data\r\nconst { loggedInuser } = useContext(AppContext);\r\n// Get Media data By Media Id\r\nconst getAudioDataById = (MediaId) => {\r\n  api\r\n    .post('/content/getAudioDataById', {  media_id : MediaId  })\r\n    .then((res) => {\r\n      setEditAudioDetails(res.data.data);\r\n      console.log(res.data.data)\r\n    })\r\n};\r\n//Edit PurchaseRequestData\r\nconst editAudioData = () => {\r\n      editaudiodetails.modification_date = creationdatetime;\r\n      editaudiodetails.modified_by = loggedInuser.first_name;\r\n      editaudiodetails.content_id = moduleId;\r\n      editaudiodetails.media_id = selectedmediaid\r\n    api\r\n      .post('/content/editAudioData', editaudiodetails)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n      setEditAudioDataModal(false); \r\n};\r\n \r\nuseEffect(() => {\r\n  getAudioDataById();\r\n   }, [])\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, [update]);\r\n  \r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>File Name</th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {getFile ? (\r\n            getFile.map((res) => {\r\n              return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                    <a\r\n                      href={`http://43.228.126.245/EMS-API/storage/uploads/${res.name}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      {res.name}\r\n                    </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        setEditAudioDataModal(true);\r\n                        getAudioDataById(res.media_id);\r\n                        setSelectedMediaId(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Edit2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td>\r\n                <p>no files uploaded yet</p>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <Modal size=\"lg\" isOpen={editaudiodatamodal}>\r\n            <ModalHeader>Insert Audio Datas\r\n            <Button color=\"secondary\" className='shadow-none' onClick={()=>{setEditAudioDataModal(false)}}>\r\n                X\r\n              </Button>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n              <Row>\r\n              <Col md=\"12\">\r\n                <Card>\r\n                  <CardBody>\r\n                    <Form>\r\n                      <Row>\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <Label>Tag</Label>\r\n                            <Input type=\"text\" \r\n                            onChange={handleInputs} \r\n                            defaultValue={editaudiodetails && editaudiodetails.tag} \r\n                            name=\"tag\"/>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <Label>Author Name</Label>\r\n                            <Input type=\"text\" \r\n                            onChange={handleInputs} \r\n                            defaultValue={editaudiodetails && editaudiodetails.author_name} \r\n                            name=\"author_name\"/>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <Label>Date</Label>\r\n                            <Input type=\"date\" \r\n                            onChange={handleInputs} \r\n                            defaultValue={editaudiodetails && moment(editaudiodetails.date).format('YYYY-MM-DD')}\r\n                            name=\"date\" />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                          <FormGroup>\r\n                            <Label>Published Date</Label>\r\n                            <Input type=\"date\" \r\n                            onChange={handleInputs} \r\n                            defaultValue={editaudiodetails && moment(editaudiodetails.published_date).format('YYYY-MM-DD')}\r\n                            name=\"published_date\"/>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        \r\n                        </Row>\r\n                        <Row>\r\n                        <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <Label>Comments</Label>\r\n                            <Input type=\"textarea\" \r\n                            rows={4}\r\n                            onChange={handleInputs} \r\n                            defaultValue={editaudiodetails && editaudiodetails.comments} \r\n                            name=\"comments\" />\r\n                            \r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                  </Card>\r\n                  </Col>\r\n                  </Row>       \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" className='shadow-none' onClick={()=>{ editAudioData();\r\n             } } > Submit </Button>\r\n              <Button color=\"secondary\" className='shadow-none' onClick={()=>{setEditAudioDataModal(false)}}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal> \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n"],"sourceRoot":""}