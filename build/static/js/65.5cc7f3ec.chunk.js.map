{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","views/EditData/FinanceEdit.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js","components/project/Tab.js","components/ApiButton.js","components/Finance/CustomerDetail.js","components/Finance/FinanceMainDetails.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","FinanceEdit","useState","activeTab","setActiveTab","financeDetails","setFinanceDetails","loggedInuser","useContext","AppContext","id","useParams","navigate","useNavigate","console","log","getFinancesById","api","post","order_id","then","res","data","catch","editFinanceData","modification_date","creationdatetime","modified_by","first_name","useEffect","editData","applyChanges","backToList","module","creationModificationDate","handleInputs","e","target","name","value","title","toggle","tab","tabs","tabId","CreationModification","details","created_by","creation_date","ComponentCard","children","subtitle","moment","format","Tab","useSearchParams","searchParams","setSearchParams","get","map","onClick","ApiButton","usePermify","isAuthorized","isLoading","xl","sm","roles","permissions","renderAuthFailed","color","CustomerDetail","md","mobile","email","address1","FinanceMainDetails","order_date","amount","order_status","defaultChecked","published","onChange"],"mappings":"iHAAA,mCAwBeA,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,iCClB3E,oBAqDeO,IAlDC,SAACC,EAAIC,GACjB,MAAY,YAATA,EACOC,IAAMC,QAAQH,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,UAATX,EACMC,IAAMW,MAAMb,EAAK,CACnBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAED,SAATX,EACKC,IAAMY,KAAKd,EAAK,CAClBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAEK,YAATX,EACMC,IAAMa,QAAQf,EAAK,CACrBI,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGRV,YAAMF,K,wMC2UVgB,UAnWK,WAGlB,MAAkCC,mBAAS,KAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,EAA4CF,mBAAS,MAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAUQC,EAAiBC,qBAAWC,KAA5BF,aAEAG,EAAOC,cAAPD,GACFE,EAAWC,cAsBnBC,QAAQC,IAAI,MAAML,GAClBI,QAAQC,IAAI,OAAOV,GA0HjB,IAAMW,EAAkB,WACtBC,IACGC,KAAK,2BAA4B,CAAEC,SAAUT,IAC7CU,MAAK,SAACC,GACLf,EAAkBe,EAAIC,KAAKA,KAAK,IAChCR,QAAQC,IAAI,MAAMM,EAAIC,KAAKA,SAE5BC,OAAM,WACLvC,YAAQ,0BAA2B,YAKnCwC,EAAkB,WACtBnB,EAAeoB,kBAAoBC,IACnCrB,EAAesB,YAAcpB,EAAaqB,WAC1CX,IACGC,KAAK,wBAAyBb,GAC9Be,MAAK,WACJJ,IACAhC,YAAQ,8BAA+B,cAExCuC,OAAM,WACLvC,YAAQ,yBAA0B,aAexC,OAXA6C,qBAAU,WAERb,MAQC,CAACN,IAEF,qCACE,cAAC,IAAD,CAAahC,QAAS2B,GAAkBA,EAAec,WAQ7D,cAAC,IAAD,CACcW,SAAUN,EACVZ,SAAUA,EACVmB,aAAcP,EACdQ,WAlMO,WACjBpB,EAAS,aAkMCqB,OAAO,YAGf,cAAC,IAAD,CACE5B,eAAgBA,EAChB6B,yBAA0B7B,EAC1B8B,aArMe,SAACC,GACpB9B,EAAkB,2BAAKD,GAAN,kBAAuB+B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,YAuM/D,eAAC,UAAD,CAAeC,MAAM,eAArB,UACE,cAAC,IAAD,CAAKC,OA7LI,SAACC,GACdtC,EAAasC,IA4LYC,KArMd,CAEX,CAAEjC,GAAI,IAAK4B,KAAM,oBACjB,CAAE5B,GAAI,IAAK4B,KAAM,WACjB,CAAE5B,GAAI,IAAK4B,KAAM,cACjB,CAAE5B,GAAI,IAAK4B,KAAM,cACjB,CAAE5B,GAAI,IAAK4B,KAAM,oBAgMb,eAAC,KAAD,CAAYxD,UAAU,MAAMqB,UAAWA,EAAvC,UAUE,cAAC,KAAD,CAASyC,MAAM,IAAf,SACE,cAAC,IAAD,CAAgBvC,eAAgBA,MAGlC,cAAC,KAAD,CAASuC,MAAM,iB,kEC3QV,SAASC,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAATN,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAW5D,IAAI,KAAKE,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAM0D,IACLM,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,gDAAmBA,GAAWA,EAAQC,WAAtC,IAAmDD,GAAWA,EAAQE,mBAExE,cAAC,KAAD,CAAKlE,UAAU,SAAf,SACE,gDAAmBgE,GAAWA,EAAQnB,YAAtC,IAAoDmB,GAAWA,EAAQrB,iCCOxEwB,UAvBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUV,EAA+C,EAA/CA,MAAOW,EAAwC,EAAxCA,SAASjB,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMpD,UAAU,cAAhB,UACE,cAAC+D,EAAD,CAAsBC,QAASZ,EAA0BM,MAAOA,IAKhE,eAAC,IAAD,CAAU1D,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CqE,GAAY,KACvD,8BAAMD,Y,iCCdd,aAEMxB,EAFN,MAEyB0B,KAASC,OAAO,wBAC1B3B,O,yJCEA,SAAS4B,EAAT,GAA+B,IAAhBb,EAAe,EAAfA,OAAOE,EAAQ,EAARA,KAOnC,EAAwCY,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJA5B,qBAAU,WACTY,EAAOe,EAAaE,IAAI,UACtB,CAACF,EAAaE,IAAI,SAGnB,cAAC,IAAD,CAAKf,MAAI,EAAT,gBAEGA,QAFH,IAEGA,OAFH,EAEGA,EAAMgB,KAAI,SAACvB,GACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAEEtD,UAAWsD,EAAE1B,KAAO8C,EAAaE,IAAI,OAAS,SAAW,GACzDE,QAAS,WACPH,EAAgB,CAACf,IAAIN,EAAE1B,KACvB+B,EAAOL,EAAE1B,KALb,SAQG0B,EAAEE,MAPAF,EAAE1B,KAFK0B,EAAE1B,W,2EC4EXmD,IA7FG,SAAC,GAA8D,IAA5D/B,EAA2D,EAA3DA,SAAUlB,EAAiD,EAAjDA,SAAUmB,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OAQjE,EAAoC6B,uBAApC,EAAQC,aAAR,EAAsBC,UAatB,OACE,8BACE,cAAC,IAAD,CAAMpF,IAAI,KAAKE,UAAU,+BAAzB,SACE,qBAAKA,UAAU,0BAAf,SACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKA,UAAU,SAASmF,GAAI,EAAGC,GAAI,GAAnC,UACG,IACD,cAAC,YAAD,CACEC,MAAO,KACPC,YAAW,UAAKnC,EAAL,SACXoC,iBAAkB,sBAHpB,SAKE,eAAC,IAAD,CACET,QAAS,WACP9B,IACAlB,EAAS,WAEX0D,MAAM,UALR,UAOG,IAPH,eAYJ,eAAC,IAAD,CAAKxF,UAAU,SAASmF,GAAI,EAAGC,GAAI,GAAnC,UACG,IACD,cAAC,YAAD,CACEC,MAAO,KACPC,YAAW,UAAKnC,EAAL,SACXoC,iBAAkB,sBAHpB,SAKE,cAAC,IAAD,CACET,QAAS,WACP9B,IACAC,KAEFuC,MAAM,UALR,wBAWJ,eAAC,IAAD,CAAKxF,UAAU,SAASmF,GAAI,EAAGC,GAAI,GAAnC,UACG,IACD,cAAC,IAAD,CACEN,QAAS,WACP5B,KAEFsC,MAAM,OAJR,6BASF,eAAC,IAAD,CAAKxF,UAAU,SAASmF,GAAI,EAAGC,GAAI,GAAnC,UACG,IACD,cAAC,YAAD,CACEC,MAAO,KACPC,YAAW,UAAKnC,EAAL,WACXoC,iBAAkB,kEAHpB,SAKE,cAAC,IAAD,CAAQC,MAAM,SAASV,QAAS,aAAhC,oC,iCCvFhB,0DAIe,SAASW,EAAT,GAA2C,IAAlBlE,EAAiB,EAAjBA,eAItC,OACE,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,KAAD,WACE,cAAC,IAAD,CAAKmE,GAAG,IAAIN,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,0BAA0B,uBACzB7D,GAAkBA,EAAeuB,gBAItC,cAAC,IAAD,CAAK4C,GAAG,IAAIN,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,uBACA,+BAAO7D,GAAkBA,EAAeoE,cAG5C,cAAC,IAAD,CAAKD,GAAG,IAAIN,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,uBACA,+BAAO7D,GAAkBA,EAAeqE,aAG5C,cAAC,IAAD,CAAKF,GAAG,IAAIN,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,uBACA,+BAAO7D,GAAkBA,EAAesE,yB,iCCrC1D,mEAMe,SAASC,EAAT,GAAgE,IAAlCvE,EAAiC,EAAjCA,eAAiB8B,EAAgB,EAAhBA,aAK5D,OACE,cAAC,IAAD,UACI,cAAC,IAAD,UACE,cAAC,UAAD,CAAeK,MAAM,eAArB,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAKgC,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,uBACA,+BAAOnE,GAAkBA,EAAec,gBAU9C,cAAC,IAAD,CAAKqD,GAAG,IAAR,SACI,eAAC,IAAD,WACE,cAAC,IAAD,yBACA,uBACA,+BACGnE,GAAkBA,EAAewE,kBAcxC,cAAC,IAAD,CAAKL,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,uBACA,+BAAOnE,GAAkBA,EAAemC,aAG5C,cAAC,IAAD,CAAKgC,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,uBACA,+BAAOnE,GAAkBA,EAAeyE,cAG5C,cAAC,IAAD,CAAKN,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,uBACA,+BAAOnE,GAAkBA,EAAe0E,oBAG5C,cAAC,IAAD,CAAKP,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,uBACA,cAAC,IAAD,kBACA,cAAC,IAAD,CACElC,KAAK,YACLC,MAAM,IACNrD,KAAK,QACL8F,eAAgB3E,GAA+C,IAA7BA,EAAe4E,YAAmB,EACpEC,SAAU/C,IAEZ,cAAC,IAAD,iBACA,cAAC,IAAD,CACEG,KAAK,YACLC,MAAM,IACNrD,KAAK,QACL8F,eAAgB3E,GAA+C,IAA7BA,EAAe4E,YAAmB,EACpEC,SAAU/C","file":"static/js/65.5cc7f3ec.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React, { useEffect, useState,useContext } from 'react';\r\nimport { TabContent, TabPane } from 'reactstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\n// import InvoiceModal from '../../components/FinanceTable/InvoiceModal';\r\n// import ReceiptModal from '../../components/FinanceTable/ReceiptModal';\r\n// import CreateReceipt from '../../components/FinanceTable/CreateReceipt';\r\n// import CreateNote from '../../components/FinanceTable/CreateNote';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CustomerDetail from '../../components/Finance/CustomerDetail';\r\n// import FinanceInvoiceModal from '../../components/FinanceTable/FinanceInvoiceModal';\r\n// import CustomerFinanceReceipt from '../../components/FinanceTable/CustomerFinanceReceipt';\r\n// import CustomerFinanceCreditNote from '../../components/FinanceTable/CustomerFinanceCreditNote';\r\n// import FinanceSummary from '../../components/FinanceTable/FinanceSummary';\r\n//import FinanceDeliveryAddress from '../../components/FinanceTable/FinanceDeliveryAddress';\r\nimport FinanceMainDetails from '../../components/Finance/FinanceMainDetails';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport Tab from '../../components/project/Tab';\r\nimport ApiButton from '../../components/ApiButton';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst FinanceEdit = () => {\r\n  // All state variables\r\n  // const [editInvoiceData, setEditInvoiceData] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  // const [editCreateReceipt, setEditCreateReceipt] = useState(false);\r\n  // const [editCreateNote, setEditCreateNote] = useState(false);\r\n  // const [editInvoiceModal, setEditInvoiceModal] = useState(false);\r\n  // const [editReceiptModal, setEditReceiptModal] = useState(false);\r\n  // const [editReceiptDataModal, setReceiptDataModal] = useState(false);\r\n  // const [editModal, setEditModal] = useState(false);\r\n  const [financeDetails, setFinanceDetails] = useState(null);\r\n  // const [createInvoice, setCreateInvoice] = useState(null);\r\n  // const [cancelInvoice, setCancelInvoice] = useState(null);\r\n  // const [cancelReceipt, setCancelReceipt] = useState(null);\r\n  // const [receipt, setReceipt] = useState(null);\r\n  // const [note, setNote] = useState([]);\r\n  // const [invoicesummary, setInvoiceSummary] = useState(null);\r\n  // const [receiptsummary, setReceiptSummary] = useState(null);\r\n  // const [invoiceitemsummary, setInvoiceItemSummary] = useState(null);\r\n  // const [invoiceDatas, setInvoiceDatas] = useState({});\r\n  const { loggedInuser } = useContext(AppContext);\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  //Button fuctions\r\n  //const applyChanges = () => {};\r\n  const backToList = () => {\r\n    navigate('/Finance');\r\n  };\r\n  //Setting Data in Finance Details\r\n  const handleInputs = (e) => {\r\n    setFinanceDetails({ ...financeDetails, [e.target.name]: e.target.value });\r\n  };\r\n  // Start for tab refresh navigation #Renuka 1-06-23\r\n  const tabs = [\r\n    // { id: '1', name: 'Delivery Address' },\r\n    { id: '1', name: 'Customer Details' },\r\n    { id: '3', name: 'Summary' },\r\n    { id: '4', name: 'Invoice(s)' },\r\n    { id: '5', name: 'Receipt(s)' },\r\n    { id: '6', name: 'CreditNote(s)' },\r\n  ];\r\n  const toggle = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\nconsole.log('ids',id)\r\nconsole.log('ids1',financeDetails);\r\n  // Method for getting Invoice By Order Id\r\n  // const getInvoiceById = () => {\r\n  //   api\r\n  //     .post('/invoice/getInvoiceById', { order_id: id })\r\n  //     .then((res) => {\r\n  //       // setCreateInvoice(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  //receipt Cancel\r\n  // const receiptCancel = (obj,invoiceId) => {\r\n  //   obj.receipt_status = 'cancelled';\r\n  //   obj.invoice_id = invoiceId;\r\n  //   api\r\n  //     .post('/Finance/editTabReceiptPortalDisplay', obj)\r\n  //     .then(() => {\r\n  //       message('Record editted successfully', 'success');\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Unable to edit record.', 'error');\r\n  //     });\r\n  // };\r\n  // const invoiceCancel = (obj) => {\r\n  //   obj.status = 'cancelled';\r\n  //   api\r\n  //     .post('/Finance/editInvoicePortalDisplay', obj)\r\n  //     .then(() => {\r\n  //       message('Record editted successfully', 'success');\r\n  //       setTimeout(() => {\r\n  //         window.location.reload();\r\n  //       }, 600);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Unable to edit record.', 'error');\r\n  //     });\r\n  // };\r\n  //get Invoice Cancel\r\n  // const getInvoiceCancel = () => {\r\n  //   api\r\n  //     .post('/invoice/getInvoiceCancel', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setCancelInvoice(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n  //get receipt\r\n  // const getReceiptCancel = () => {\r\n  //   api\r\n  //     .post('/invoice/getReceiptCancel', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setCancelReceipt(res.data.data);\r\n        \r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n  //For getting Receipy By Order Id\r\n  // const getReceiptById = () => {\r\n  //   api\r\n  //     .post('/invoice/getReceiptById', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setReceipt(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Receipt Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  //For getting Credit By Order Id\r\n  // const getCreditById = () => {\r\n  //   api\r\n  //     .post('/invoice/getNoteById', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setNote(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  //For getting Summary By Order Id\r\n  // const getInvoiceSummaryById = () => {\r\n  //   api\r\n  //     .post('/Finance/getInvoiceSummary', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setInvoiceSummary(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  // const getInvoiceReceiptSummaryById = () => {\r\n  //   api\r\n  //     .post('/Finance/getInvoiceReceiptSummary', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setReceiptSummary(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  // const getInvoiceItemSummaryById = () => {\r\n  //   api\r\n  //     .post('/Finance/getInvoiceItemSummary', { order_id: id })\r\n  //     .then((res) => {\r\n  //       setInvoiceItemSummary(res.data.data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       message('Cannot get Invoice Data', 'error');\r\n  //     });\r\n  // };\r\n\r\n  //For getting Finance By Order Id\r\n  const getFinancesById = () => {\r\n    api\r\n      .post('/Finance/getFinancesById', { order_id: id })\r\n      .then((res) => {\r\n        setFinanceDetails(res.data.data[0]);\r\n        console.log(\"res\",res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Fianance Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //For editting Finace Record\r\n  const editFinanceData = () => {\r\n    financeDetails.modification_date = creationdatetime;\r\n    financeDetails.modified_by = loggedInuser.first_name;\r\n    api\r\n      .post('/Finance/editFinances', financeDetails)\r\n      .then(() => {\r\n        getFinancesById();\r\n        message('Record editted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getInvoiceById();\r\n    getFinancesById();\r\n    // getReceiptById();\r\n    // getCreditById();\r\n    // getInvoiceCancel();\r\n    // getReceiptCancel();\r\n    // getInvoiceSummaryById();\r\n    // getInvoiceReceiptSummaryById();\r\n    // getInvoiceItemSummaryById();\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={financeDetails && financeDetails.order_id} />\r\n      {/* Save,Apply Buttons */}\r\n      {/* <FinanceButton\r\n        navigate={navigate}\r\n        editFinanceData={editFinanceData}\r\n        applyChanges={applyChanges}\r\n        backToList={backToList}\r\n      ></FinanceButton> */}\r\n<ApiButton\r\n              editData={editFinanceData}\r\n              navigate={navigate}\r\n              applyChanges={editFinanceData}\r\n              backToList={backToList}\r\n              module=\"Finance\"\r\n            ></ApiButton>\r\n      {/* Main Details */}\r\n      <FinanceMainDetails\r\n        financeDetails={financeDetails}\r\n        creationModificationDate={financeDetails}\r\n        handleInputs={handleInputs}\r\n      ></FinanceMainDetails>\r\n\r\n      <ComponentCard title=\"More Details\">\r\n        <Tab toggle={toggle} tabs={tabs} />\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          {/* Delivery address Form */}\r\n          {/* <TabPane tabId=\"1\">\r\n            <FinanceDeliveryAddress\r\n              financeDetails={financeDetails}\r\n              handleInputs={handleInputs}\r\n            ></FinanceDeliveryAddress>\r\n          </TabPane> */}\r\n\r\n          {/* Customer Details Form */}\r\n          <TabPane tabId=\"1\">\r\n            <CustomerDetail financeDetails={financeDetails}></CustomerDetail>\r\n          </TabPane>\r\n          {/* Summary */}\r\n          <TabPane tabId=\"3\">\r\n            {/* <FinanceSummary\r\n              invoicesummary={invoicesummary}\r\n              receiptsummary={receiptsummary}\r\n              invoiceitemsummary={invoiceitemsummary}\r\n            ></FinanceSummary> */}\r\n          </TabPane>\r\n          {/* <TabPane tabId=\"4\">\r\n            <FinanceInvoiceModal\r\n              createInvoice={createInvoice}\r\n              cancelInvoice={cancelInvoice}\r\n              invoiceCancel={invoiceCancel}\r\n              setEditModal={setEditModal}\r\n              setEditInvoiceModal={setEditInvoiceModal}\r\n              setInvoiceDatas={setInvoiceDatas}\r\n              financeDetails={financeDetails}\r\n            ></FinanceInvoiceModal>\r\n          </TabPane> */}\r\n          {/* <TabPane tabId=\"5\">\r\n            <CustomerFinanceReceipt\r\n              receiptCancel={receiptCancel}\r\n              cancelReceipt={cancelReceipt}\r\n              receipt={receipt}\r\n              setEditReceiptModal={setEditReceiptModal}\r\n              setReceiptDataModal={setReceiptDataModal}\r\n              financeDetails={financeDetails}\r\n            ></CustomerFinanceReceipt>\r\n          </TabPane> */}\r\n          {/* <TabPane tabId=\"6\">\r\n            <CustomerFinanceCreditNote note={note}></CustomerFinanceCreditNote>\r\n          </TabPane> */}\r\n\r\n          {/* <ComponentCard title=\"Add More\">\r\n            <ToastContainer></ToastContainer> */}\r\n\r\n            {/* Modal for invoice,receipt and credit note */}\r\n\r\n            {/* <InvoiceData\r\n              editInvoiceData={editInvoiceData}\r\n              setEditInvoiceData={setEditInvoiceData}\r\n              projectInfo={financeDetails}\r\n              orderId={id}\r\n            /> */}\r\n\r\n            {/* <CreateReceipt\r\n              editCreateReceipt={editCreateReceipt}\r\n              setEditCreateReceipt={setEditCreateReceipt}\r\n              getReceiptById={getReceiptById}\r\n              getFinancesById={getFinancesById}\r\n              orderId={id}\r\n            /> */}\r\n\r\n            {/* <CreateNote editCreateNote={editCreateNote} setEditCreateNote={setEditCreateNote} /> */}\r\n\r\n            {/* <InvoiceModal\r\n              editModal={editModal}\r\n              setEditModal={setEditModal}\r\n              editInvoiceModal={editInvoiceModal}\r\n              setInvoiceDatas={setInvoiceDatas}\r\n              invoiceDatas={invoiceDatas}\r\n            /> */}\r\n            {/* <ReceiptModal\r\n              editReceiptModal={editReceiptModal}\r\n              setReceiptDataModal={setReceiptDataModal}\r\n              editReceiptDataModal={editReceiptDataModal}\r\n            /> */}\r\n\r\n            {/* Invoice,Receipt and Note tab button */}\r\n            {/* <Row>\r\n              <Col>\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setEditInvoiceData(true);\r\n                  }}\r\n                >\r\n                  Create Invoice\r\n                </Button>\r\n              </Col> */}\r\n              {/* <Col>\r\n                <Button\r\n                  className=\"buttons\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setEditCreateReceipt(true);\r\n                  }}\r\n                >\r\n                  Create Receipt\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\"buttons\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setEditCreateNote(true);\r\n                  }}\r\n                >\r\n                  Credit Notes\r\n                </Button>\r\n              </Col>\r\n            </Row> */}\r\n          {/* </ComponentCard> */}\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default FinanceEdit;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Button, Col, Row, Card } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { HasAccess ,usePermify} from '@permify/react-role';\r\n\r\nconst ApiButton = ({ editData, navigate, applyChanges, backToList, module }) => {\r\n  ApiButton.propTypes = {\r\n    editData: PropTypes.func,\r\n    navigate: PropTypes.any,\r\n    applyChanges: PropTypes.func,\r\n    backToList: PropTypes.func,\r\n    module: PropTypes.string,\r\n  };\r\n  const { isAuthorized, isLoading } = usePermify();\r\n\r\n  \r\n  const fetchData = async (type) => {\r\n    // Pass roles and permissions accordingly\r\n    // You can send empty array or null for first param to check permissions only\r\n    if (await isAuthorized(null, `${module}-${type}`)) {\r\n       return true\r\n    }else{\r\n      return false\r\n    }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <Card tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <div className=\"d-flex flex-row-reverse\">\r\n          <Row>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-edit`}\r\n                renderAuthFailed={<p></p>}\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    editData();\r\n                    navigate('/Leave');\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  {' '}\r\n                  Save\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-edit`}\r\n                renderAuthFailed={<p></p>}\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    editData();\r\n                    applyChanges();\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={4} sm={12}>\r\n              {' '}\r\n              <Button\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n                color=\"dark\"\r\n              >\r\n                Back To List\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-remove`}\r\n                renderAuthFailed={<p>You are not authorized to access!</p>}\r\n              >\r\n                <Button color=\"danger\" onClick={() => {}}>\r\n                  Delete\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiButton;\r\n","import React from 'react'\r\nimport { Row, Col, Form, FormGroup, Label } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function CustomerDetail({financeDetails}) {\r\n    CustomerDetail.propTypes = {\r\n        financeDetails: PropTypes.any\r\n      }\r\n  return (\r\n    <Form >\r\n        <FormGroup>\r\n            <Row>\r\n              <Col md=\"4\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Contat Name</Label><br />\r\n                  {financeDetails && financeDetails.first_name}\r\n                </FormGroup>\r\n              </Col>\r\n              \r\n              <Col md=\"4\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Mobile</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.mobile}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.email}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Address 1 </Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.address1}</span>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n            </Row>\r\n     \r\n        </FormGroup>\r\n      </Form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\n\r\nexport default function FinanceMainDetails({ financeDetails , handleInputs,}) {\r\n  FinanceMainDetails.propTypes = {\r\n    financeDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n  };\r\n  return (\r\n    <Form>\r\n        <FormGroup>\r\n          <ComponentCard title=\"Main Details\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Order Id</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.order_id}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Payment Method </Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.payment_method} </span>\r\n                </FormGroup>\r\n              </Col> */}\r\n            <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Order Date</Label>\r\n                  <br />\r\n                  <span>\r\n                    {financeDetails && financeDetails.order_date}\r\n                  </span>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              {/* <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Delivery Date</Label>\r\n                  <br />\r\n                  <span>\r\n                    {financeDetails && financeDetails.delivery_date}\r\n                  </span>\r\n                </FormGroup>\r\n              </Col> */}\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Scheme</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.title}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Amount</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.amount}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Status</Label>\r\n                  <br />\r\n                  <span>{financeDetails && financeDetails.order_status}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Published</Label>\r\n                  <br></br>\r\n                  <Label>Yes</Label>\r\n                  <Input\r\n                    name=\"published\"\r\n                    value=\"1\"\r\n                    type=\"radio\"\r\n                    defaultChecked={financeDetails && financeDetails.published === 1 && true}\r\n                    onChange={handleInputs}\r\n                  />\r\n                  <Label>No</Label>\r\n                  <Input\r\n                    name=\"published\"\r\n                    value=\"0\"\r\n                    type=\"radio\"\r\n                    defaultChecked={financeDetails && financeDetails.published === 0 && true}\r\n                    onChange={handleInputs}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n             </Row>\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n );\r\n}"],"sourceRoot":""}