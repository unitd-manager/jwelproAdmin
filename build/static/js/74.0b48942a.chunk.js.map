{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/SubCategoryTable/SubCategoryButton.js","components/SubCategoryTable/SubCategoryEditDetails.js","components/SubCategoryTable/SubCategoryPageMetaData.js","views/EditData/SubCategoryEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","SubCategoryButton","backToList","editSubCategoryData","navigate","useNavigate","ComponentCardV2","color","onClick","setTimeout","SubCategoryEditDetails","subcategoryeditdetails","handleInputs","category","md","onChange","value","sub_category_title","name","category_id","defaultValue","map","ele","concattitle","sub_category_type","external_link","internal_link","defaultChecked","published","SubCategoryPageMetaData","meta_title","meta_description","meta_keyword","seo_title","SubCategoryEdit","useState","setCategory","setSubCategoryEditDetails","subcategorytypedetails","setSubCategoryTypetDetails","id","useParams","e","target","editSubCategoryById","api","post","sub_category_id","then","res","resObj","data","catch","useEffect","get","saveChanges","window","reload","applyChanges","moment","format","creationdatetime","deleteSubCategoryData","pStyle","textAlign","marginRight","oStyle","outline","border","style"],"mappings":"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","file":"static/js/74.0b48942a.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\r\nimport { useNavigate,  } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function SubCategoryButton({\r\n  \r\n  backToList,\r\n  editSubCategoryData,\r\n  // id,\r\n  // navigate\r\n}) \r\n\r\n{\r\n  SubCategoryButton.propTypes = {\r\n \r\n    backToList: PropTypes.func,\r\n    editSubCategoryData: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    // navigate: PropTypes.any\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n         <Col>\r\n          <Button color=\"primary\" onClick={() => {\r\n            editSubCategoryData();\r\n            setTimeout(() => {\r\n              navigate('/SubCategory');\r\n            }, 800);\r\n          }}>Save</Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editSubCategoryData();\r\n                 \r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col> */}\r\n              {/* <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  if (\r\n                    window.confirm(\r\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                    )\r\n                  ) {\r\n                    navigate('/SubCategory');\r\n                  } else {\r\n                    applyChanges();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"sub_category_id\"\r\n              tablename=\"sub_category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function SubCategoryEditDetails({ subcategoryeditdetails, handleInputs, category }) {\r\n  SubCategoryEditDetails.propTypes = {\r\n    subcategoryeditdetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    category: PropTypes.array,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        {/* Sub Category  Details */}\r\n        <ComponentCard title=\"Sub Category Details\"\r\n         creationModificationDate={subcategoryeditdetails}>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Title</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={subcategoryeditdetails && subcategoryeditdetails.sub_category_title}\r\n                  name=\"sub_category_title\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"category_id\"\r\n                  onChange={handleInputs}\r\n                  value={subcategoryeditdetails && subcategoryeditdetails.category_id}\r\n                >\r\n                  <option defaultValue=\"selected\">\r\n                    Please Select\r\n                  </option>\r\n                  {category &&\r\n                    category.map((ele) => {\r\n                      return <option key={ele.category_id} value={ele.category_id}>{ele.concattitle}</option>;\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Sub Category Type</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"sub_category_type\"\r\n                  onChange={handleInputs}\r\n                  value={subcategoryeditdetails && subcategoryeditdetails.sub_category_type}\r\n                >\r\n                  <option> Please Select </option>\r\n                  <option defaultValue=\"Content\">\r\n                    Content\r\n                  </option>\r\n                  <option value=\"Enquiry Form\">Enquiry Form </option>\r\n                  <option value=\"Regisration\">Regisration</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>External Link</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={subcategoryeditdetails && subcategoryeditdetails.external_link}\r\n                  name=\"external_link\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Internal Link</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={subcategoryeditdetails && subcategoryeditdetails.internal_link}\r\n                  name=\"internal_link\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Published</Label>\r\n                <br></br>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"1\"\r\n                  type=\"radio\"\r\n                  defaultChecked={\r\n                    subcategoryeditdetails && subcategoryeditdetails.published === 1 && true\r\n                  }\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label> Yes </Label>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"0\"\r\n                  type=\"radio\"\r\n                  defaultChecked={\r\n                    subcategoryeditdetails && subcategoryeditdetails.published === 0 && true\r\n                  }\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label>No</Label>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function SubCategoryPageMetaData({ subcategoryeditdetails, handleInputs }) {\r\n  SubCategoryPageMetaData.propTypes = {\r\n    subcategoryeditdetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n          {/* Page Meta Data Details */}\r\n          <ComponentCard title=\"Page Meta Data\">\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Page Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_title}\r\n                    name=\"meta_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Page Description</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"meta_description\"\r\n                    onChange={handleInputs}\r\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_description}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Page Keywords</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"meta_keyword\"\r\n                    onChange={handleInputs}\r\n                    value={subcategoryeditdetails && subcategoryeditdetails.meta_keyword}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label>SEO Title </Label>\r\n              <Input\r\n                type=\"text\"\r\n                onChange={handleInputs}\r\n                value={subcategoryeditdetails && subcategoryeditdetails.seo_title}\r\n                name=\"seo_title\"\r\n              />\r\n            </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n      </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport SubCategoryButton from '../../components/SubCategoryTable/SubCategoryButton';\r\nimport SubCategoryEditDetails from '../../components/SubCategoryTable/SubCategoryEditDetails';\r\nimport SubCategoryPageMetaData from '../../components/SubCategoryTable/SubCategoryPageMetaData';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst SubCategoryEdit = () => {\r\n  // All state variables\r\n  const [category, setCategory] = useState();\r\n  const [subcategoryeditdetails, setSubCategoryEditDetails] = useState();\r\n  const [subcategorytypedetails, setSubCategoryTypetDetails] = useState();\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //All Functions/Methods\r\n\r\n  //Setting Data in SubCategory Edit Details\r\n  const handleInputs = (e) => {\r\n    setSubCategoryEditDetails({ ...subcategoryeditdetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Route Change\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (subcategoryeditdetails.sub_category_title !== '') {\r\n      navigate('/SubCategory');\r\n    }\r\n    window.location.reload();\r\n  };\r\n  const backToList = () => {\r\n    navigate('/SubCategory');\r\n  };\r\n\r\n  //Api call for Category Dropdown data\r\n  const getCategory = () => {\r\n    api\r\n      .get('/subcategory/getCategory')\r\n      .then((res) => {\r\n        setCategory(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('SubCategory Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for Editting SubCategory By Id\r\n  const editSubCategoryById = () => {\r\n    api\r\n      .post('/subcategory/getSubCategoryById', { sub_category_id: id })\r\n      .then((res) => {\r\n        const resObj = res.data.data[0];\r\n        if (!resObj.sub_category_type) {\r\n          resObj.sub_category_type = 'Content';\r\n        }\r\n        setSubCategoryEditDetails(resObj);\r\n      })\r\n      .catch(() => {\r\n        message('SubCategory Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting Staff Type From Valuelist\r\n  const getSubCategoryType = () => {\r\n    api\r\n      .get('/subcategory/getSubCategoryTypeFromValueList')\r\n      .then((res) => {\r\n        setSubCategoryTypetDetails(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('SubCategory Type Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for Editing SubCategory Details\r\n  const editSubCategoryData = () => {\r\n    subcategoryeditdetails.modification_date = moment().format('DD-MM-YYYY');\r\n    if (subcategoryeditdetails.sub_category_title !== '') {\r\n      subcategoryeditdetails.modification_date = creationdatetime;\r\n      api\r\n        .post('/subcategory/editSubCategory', subcategoryeditdetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n          editSubCategoryById();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Api call for Deleting SubCategory Details\r\n  const deleteSubCategoryData = () => {\r\n    api\r\n      .post('/subcategory/deleteSubCategory', { sub_category_id: id })\r\n      .then(() => {\r\n        message('Record editted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    editSubCategoryById();\r\n    getCategory();\r\n    getSubCategoryType();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer />\r\n      {/* SubCategory Button Details */}\r\n      <SubCategoryButton\r\n        saveChanges={saveChanges}\r\n        applyChanges={applyChanges}\r\n        backToList={backToList}\r\n        editSubCategoryData={editSubCategoryData}\r\n        deleteSubCategoryData={deleteSubCategoryData}\r\n        navigate={navigate}\r\n        id={id}\r\n      ></SubCategoryButton>\r\n\r\n      {/* Sub Category  Details */}\r\n      <BreadCrumbs />\r\n      <SubCategoryEditDetails\r\n        subcategoryeditdetails={subcategoryeditdetails}\r\n        handleInputs={handleInputs}\r\n        category={category}\r\n        subcategorytypedetails={subcategorytypedetails}\r\n      ></SubCategoryEditDetails>\r\n\r\n      {/* Page Meta Data Details */}\r\n      <SubCategoryPageMetaData\r\n        subcategoryeditdetails={subcategoryeditdetails}\r\n        handleInputs={handleInputs}\r\n      ></SubCategoryPageMetaData>\r\n\r\n      </>\r\n  );\r\n};\r\n\r\nexport default SubCategoryEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n"],"sourceRoot":""}