{"version":3,"sources":["components/Message.js","components/CreationModification.js","components/ComponentCard.js","views/EditData/ArticleEdit.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","tag","className","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","InvoiceItem","updateAricles","setUpdateArticles","articleId","id","useParams","useState","description","setDescription","categoryLinked","setCategoryLinked","articles","setArticles","handleInputs","e","target","name","value","getArticlesById","api","post","article_id","then","res","data","existingQuoteformal","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","editorState","EditorState","createWithContent","convertHtmlToDraft","catch","useEffect","get","size","isOpen","color","onClick","md","onChange","author","category_id","selected","map","ele","category_title","wrapperClassName","editorClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","handleDataEditor"],"mappings":"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","file":"static/js/134.0eb5c5df.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  Button,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from 'reactstrap';\r\n//import * as $ from 'jquery';\r\n//import random from 'random';\r\nimport PropTypes from 'prop-types';\r\nimport { convertToRaw, ContentState, EditorState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { useParams } from 'react-router-dom';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nexport default function InvoiceItem({ updateAricles, setUpdateArticles, articleId }) {\r\n  InvoiceItem.propTypes = {\r\n    updateAricles: PropTypes.bool,\r\n    setUpdateArticles: PropTypes.func,\r\n    articleId: PropTypes.any,\r\n   \r\n  };\r\n  const { id } = useParams();\r\n\r\n  const [description, setDescription] = useState('');\r\n  const [categoryLinked, setCategoryLinked] = useState('');\r\n  const [articles, setArticles] = useState('');\r\n  const handleInputs = (e) => {\r\n    setArticles({ ...articles, [e.target.name]: e.target.value });\r\n  };\r\n  const convertHtmlToDraft = (existingQuoteformal) => {\r\n    const contentBlock = htmlToDraft(existingQuoteformal && existingQuoteformal);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      setDescription(editorState);\r\n    }\r\n  };\r\n\r\n  const handleDataEditor = (e, type) => {\r\n    setArticles({\r\n      ...articles,\r\n      [type]: draftToHtml(convertToRaw(e.getCurrentContent())),\r\n    });\r\n  };\r\n  const getArticlesById = () => {\r\n    api\r\n      .post('/content/getArticleByArticeId', { article_id: articleId })\r\n      .then((res) => {\r\n        setArticles(res.data.data);\r\n        convertHtmlToDraft(res.data.data.description);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  const updateArticle = () => {\r\n         api\r\n        .post('/content/editArticle', articles)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } \r\n    const getCategory = () => {\r\n      api.get('/content/getCategory', categoryLinked).then((res) => {\r\n        setCategoryLinked(res.data.data);\r\n      });\r\n    };\r\n  useEffect(() => {\r\n    getArticlesById();\r\n    getCategory();\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      <Modal size=\"xl\" isOpen={updateAricles}>\r\n        <ModalHeader>\r\n          Edit Article\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setUpdateArticles(false);\r\n            }}\r\n          >\r\n            X\r\n          </Button>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Title<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={articles && articles.title}\r\n                    name=\"title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Author<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={articles && articles.author}\r\n                    name=\"author\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>  \r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"category_id\"\r\n                    value={articles && articles.category_id}\r\n                    onChange={handleInputs}\r\n                  >\r\n                    <option value=\"\" selected=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {categoryLinked &&\r\n                      categoryLinked.map((ele) => {\r\n                        return <option value={ele.category_id}>{ele.category_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/* Description form */}\r\n              <ComponentCard title=\"Description\">\r\n                <Editor\r\n                  editorState={description}\r\n                  wrapperClassName=\"demo-wrapper mb-0\"\r\n                  editorClassName=\"demo-editor border mb-4 edi-height\"\r\n                  onEditorStateChange={(e) => {\r\n                    handleDataEditor(e, 'description');\r\n                    setDescription(e);\r\n                  }}\r\n                />\r\n              </ComponentCard>\r\n            </Row>\r\n            </FormGroup>\r\n            </Form>\r\n            </ModalBody>\r\n          \r\n                      <ModalFooter>\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            updateArticle();\r\n                          }}\r\n                        >\r\n                          {' '}\r\n                          Submit{' '}\r\n                        </Button>\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            setUpdateArticles(false);\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </ModalFooter>\r\n               \r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}