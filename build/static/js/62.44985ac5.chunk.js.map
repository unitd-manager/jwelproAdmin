{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/SectionTable/SectionButton.js","views/EditData/SectionEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","components/DeleteButton.js","../node_modules/react-feather/dist/icons/image.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","SectionButton","editSectionData","navigate","applyChanges","backToList","id","ComponentCardV2","color","onClick","setTimeout","window","confirm","DeleteButton","pictureroom","ifpiture","columnname","tablename","SectionEdit","useState","section","setSection","activeTab","setActiveTab","attachmentModal","setAttachmentModal","RoomName","setRoomName","fileTypes","setFileTypes","valuelist","setValuelist","modelType","pictureData","setDataForPicture","pictureupdate","setPictureUpdate","useParams","useNavigate","loggedInuser","useContext","AppContext","editSectionyId","api","post","section_id","then","res","data","catch","handleInputs","e","target","name","value","useEffect","get","section_title","creationdatetime","first_name","DeleteSection","md","onChange","section_type","defaultValue","map","button_position","groups","routes","number_of_rows","defaultChecked","published","tabs","tab","tabId","xs","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","update","setUpdate","ViewFileComponentV2","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","style","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","fiels","arrayOfObj","Object","entries","console","log","types","role","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","reload","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","ifAttachment","attachmentroom","deletePicture","formalId","status","deleteRecord","idvalue","size","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/62.44985ac5.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react'\r\nimport { Row, Col, Form, FormGroup,Button } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\nimport DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function SectionButton({editSectionData,navigate,applyChanges,backToList, id}) {\r\n    SectionButton.propTypes = {\r\n        editSectionData: PropTypes.func,\r\n        navigate: PropTypes.any,\r\n        applyChanges: PropTypes.func,\r\n        id: PropTypes.string,\r\n        backToList: PropTypes.func\r\n      }\r\n  return (\r\n    <Form>\r\n    <FormGroup>\r\n      <ComponentCardV2>\r\n        <Row>\r\n          <Col>\r\n            <Button  className='shadow-none'\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                editSectionData();\r\n                setTimeout(() => {\r\n                  navigate('/Section');\r\n                }, 1100);\r\n              }}>Save\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button  className='shadow-none'\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                editSectionData();\r\n                applyChanges();\r\n              }}>Apply\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button  className='shadow-none'\r\n              color=\"dark\"\r\n              onClick={() => {\r\n                if (\r\n                  window.confirm(\r\n                    'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                  )\r\n                ) {\r\n                  navigate('/Section');\r\n                } else {\r\n                  applyChanges();\r\n                }\r\n              }}\r\n            > Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n          \r\n          <DeleteButton\r\n              pictureroom=\"SectionPic\"\r\n              ifpiture\r\n              id={id} \r\n              columnname=\"section_id\"\r\n              tablename=\"section\"\r\n            ></DeleteButton>\r\n          </Col>\r\n          <Col>\r\n            <Button  className='shadow-none'\r\n              color=\"dark\"\r\n              onClick={() => {\r\n                backToList();\r\n              }}>Back to List\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </ComponentCardV2>\r\n    </FormGroup>\r\n  </Form>\r\n  )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n} from 'reactstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as Icon from 'react-feather';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport message from '../../components/Message';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport api from '../../constants/api';\r\nimport SectionButton from '../../components/SectionTable/SectionButton';\r\nimport AppContext from '../../context/AppContext';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst SectionEdit = () => {\r\n  //Const Variables\r\n  const [section, setSection] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [valuelist, setValuelist] = useState();\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureupdate, setPictureUpdate] = useState(false);\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  //  toggle Expense\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  // Abi for Picture attachment\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n\r\n  //  button position\r\n  const applyChanges = () => {};\r\n\r\n  const backToList = () => {\r\n    navigate('/Section');\r\n  };\r\n  //  Get section by id\r\n  const editSectionyId = () => {\r\n    api\r\n      .post('/section/getSectionById', { section_id: id })\r\n      .then((res) => {\r\n        setSection(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Section Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Section Functions/Methods\r\n  const handleInputs = (e) => {\r\n    setSection({ ...section, [e.target.name]: e.target.value });\r\n  };\r\n  //Logic for section edit data in db\r\n  const editSectionData = () => {\r\n    if (section.section_title !== '') {\r\n      section.modification_date = creationdatetime;\r\n      section.modified_by= loggedInuser.first_name; \r\n      api\r\n        .post('/section/editSection', section)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n          editSectionyId();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n  // delete section\r\n  const DeleteSection = () => {\r\n    api\r\n      .post('/section/deleteSection', { section_id: id })\r\n      .then(() => {\r\n        message('Record editted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/section/getValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    editSectionyId();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={section && section.section_title} />\r\n      {/* Button */}\r\n      <SectionButton\r\n        editSectionData={editSectionData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        DeleteSection={DeleteSection}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></SectionButton>\r\n\r\n      {/* Main Details */}\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCard title=\"Section Details\" creationModificationDate={section}>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Title<span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={section && section.section_title}\r\n                    name=\"section_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Section Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={section && section.section_type}\r\n                    name=\"section_type\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {valuelist &&\r\n                      valuelist.map((e) => {\r\n                        return (\r\n                          <option key={e.value} value={e.value}>\r\n                            {e.value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Label>Button Position</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  onChange={handleInputs}\r\n                  value={section && section.button_position}\r\n                  name=\"button_position\"\r\n                >\r\n                  <option defaultValue=\"selected\">Please Select</option>\r\n                  <option value=\"Top\">Top</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                  <option value=\"Reports\">Reports</option>\r\n                </Input>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <Label>Groups</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  onChange={handleInputs}\r\n                  value={section && section.groups}\r\n                  name=\"groups\"\r\n                >\r\n                  <option defaultValue=\"selected\">Please Select</option>\r\n                  <option value=\"Main\">Main</option>\r\n                  <option value=\"Home\">Home</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                  <option value=\"Navmenu\">Navmenu</option>\r\n           \r\n                </Input>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Routes</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={section && section.routes}\r\n                    name=\"routes\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Number Of Rows</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={section && section.number_of_rows}\r\n                    name=\"number_of_rows\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <Label>Published</Label>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"radio\"\r\n                    name=\"published\"\r\n                    value=\"1\"\r\n                    onChange={handleInputs}\r\n                    defaultChecked={section && section.published === 1 && true}\r\n                  />\r\n                  <Label>Yes</Label>\r\n\r\n                  <Input\r\n                    type=\"radio\"\r\n                    name=\"published\"\r\n                    value=\"0\"\r\n                    onChange={handleInputs}\r\n                    defaultChecked={section && section.published === 0 && true}\r\n                  />\r\n                  <Label>No</Label>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n      {/* Creation and Modification date & time */}\r\n      {/* Tab start */}\r\n      <ComponentCard>\r\n        <ToastContainer></ToastContainer>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTab === '1' ? 'active' : ''}\r\n              onClick={() => {\r\n                toggle('1');\r\n              }}\r\n            >\r\n              Picture\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRoomName('SectionPic');\r\n                        setFileTypes(['JPG','JPEG','PNG', 'GIF', 'OGG', 'MP3', 'WAV', 'M4A']);\r\n                        dataForPicture();\r\n                        setAttachmentModal(true);\r\n                      }}\r\n                    >\r\n                      <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <AttachmentModalV2\r\n                  moduleId={id}\r\n                  attachmentModal={attachmentModal}\r\n                  setAttachmentModal={setAttachmentModal}\r\n                  roomName={RoomName}\r\n                  fileTypes={fileTypes}\r\n                  altTagData=\"Section Data\"\r\n                  desc=\"Section Data\"\r\n                  recordType=\"Picture\"\r\n                  mediaType={pictureData.modelType}\r\n                  update={pictureupdate}\r\n                  setUpdate={setPictureUpdate}\r\n                />\r\n                <ViewFileComponentV2 moduleId={id} roomName=\"SectionPic\" recordType=\"Picture\" update={pictureupdate}\r\n                    setUpdate={setPictureUpdate} />\r\n              </FormGroup>\r\n            </Form>\r\n          </TabPane>\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default SectionEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://emsweb.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport api from '../constants/api';\r\nimport message from './Message';\r\n\r\nconst DeleteButton = ({\r\n  id,\r\n  columnname,\r\n  tablename,\r\n  ifpiture = false,\r\n  ifAttachment = false,\r\n  pictureroom,\r\n  attachmentroom,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  DeleteButton.propTypes = {\r\n    id: PropTypes.string,\r\n    columnname: PropTypes.string,\r\n    tablename: PropTypes.string,\r\n    ifpiture: PropTypes.bool,\r\n    ifAttachment: PropTypes.bool,\r\n    pictureroom: PropTypes.string,\r\n    attachmentroom: PropTypes.string,\r\n    //onSuccess:PropTypes.any\r\n  };\r\n  const deletePicture = (formalId, roomName) => {\r\n    api\r\n      .post('/file/deleteFileByRoomNameAndId', {\r\n        room_name: roomName,\r\n        record_id: formalId,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n         \r\n            message('Media and Records files deleted.', 'error');\r\n            navigate(-1);\r\n          \r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n  const deleteApi = () => {\r\n    api\r\n      .post('/commonApi/deleteRecord', {\r\n        idvalue: id,\r\n        columnname,\r\n        tablename,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          if (ifpiture) {\r\n            deletePicture(id, pictureroom);\r\n          } else {\r\n            /* eslint-disable */\r\n            if (ifAttachment) {\r\n              deletePicture(id, attachmentroom);\r\n            } else {\r\n              message('Record deleted successfully.');\r\n              navigate(-1);\r\n            }\r\n          }\r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteApi();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color=\"danger\"\r\n      onClick={() => {\r\n        deleteRecord();\r\n      }}\r\n    >\r\n      Delete <Icon.Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;"],"sourceRoot":""}