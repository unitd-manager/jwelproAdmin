{"version":3,"sources":["components/apps/contact/ContactListItem.js","components/apps/contact/ContactList.js","components/apps/contact/ContactSerch.js","components/apps/contact/ContactDetails.js","components/apps/contact/ContactAdd.js","components/apps/contact/ContactFilter.js","views/apps/contacts/Contacts.js","components/threeColumn/ThreeColumn.js"],"names":["ContactListItem","onContactClick","onStarredClick","onDeleteClick","id","firstname","lastname","image","department","starred","active","dispatch","useDispatch","onClick","className","ToggleInnerRightPart","src","alt","width","style","color","ContactList","useEffect","fetchContacts","contacts","useSelector","state","filter","contactSearch","c","deleted","toLocaleLowerCase","includes","frequentlycontacted","Error","getVisibleContacts","contactsReducer","currentFilter","contactContent","console","log","map","contact","SelectContact","DeleteContact","toggleStarredContact","ContactSearch","searchTerm","close","name","type","onChange","e","SearchContact","target","value","placeholder","ContactDetails","contactDetail","editContact","UpdateContact","company","email","phone","address","notes","isEdit","ContactAdd","click","length","React","useState","values","setValues","onSubmit","preventDefault","addContact","user1","md","for","required","disabled","ContactFilter","modal","setModal","toggle","block","flush","href","tag","setVisibilityFilter","isOpen","size","Contacts","ThreeColumn","leftContent","middleContent","rightContent","setIsOpen","isRightOpen","customizer","isInnerRightPart","height"],"mappings":"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","file":"static/js/174.9cc61b43.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ToggleInnerRightPart } from '../../../store/customizer/CustomizerSlice';\r\n\r\nconst ContactListItem = ({\r\n  onContactClick,\r\n  onStarredClick,\r\n  onDeleteClick,\r\n  id,\r\n  firstname,\r\n  lastname,\r\n  image,\r\n  department,\r\n  starred,\r\n  active,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <NavItem\r\n      onClick={onContactClick}\r\n      className={`w-100 cursor-pointer ${active === id ? 'bg-light' : ''}`}\r\n    >\r\n      <div\r\n        className=\"d-flex align-items-center p-3 mb-1\"\r\n        onClick={() => dispatch(ToggleInnerRightPart())}\r\n      >\r\n        <div>\r\n          <img src={image} alt=\"user\" className=\"rounded-circle\" width=\"50\" />\r\n        </div>\r\n        <div className=\"mx-2 flex-grow-1\">\r\n          <h5 className=\"mb-0 text-truncate\" style={{ width: '140px' }}>\r\n            {firstname}&nbsp;\r\n            {lastname}\r\n          </h5>\r\n          <small>{department}</small>\r\n        </div>\r\n        <div className=\"d-flex flex-shrink-0\">\r\n          <i\r\n            className=\"bi bi-star-fill mx-2\"\r\n            onClick={onStarredClick}\r\n            style={{ color: starred ? '#FFC107' : '#495057' }}\r\n          />\r\n          <i onClick={onDeleteClick} className=\"bi bi-trash\" />\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  firstname: PropTypes.string,\r\n  lastname: PropTypes.string,\r\n  image: PropTypes.string,\r\n  department: PropTypes.string,\r\n  starred: PropTypes.bool,\r\n  id: PropTypes.number,\r\n  active: PropTypes.any,\r\n  onStarredClick: PropTypes.func,\r\n  onDeleteClick: PropTypes.func,\r\n  onContactClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  SelectContact,\r\n  fetchContacts,\r\n  DeleteContact,\r\n  toggleStarredContact,\r\n} from '../../../store/apps/contacts/ContactSlice';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const getVisibleContacts = (contacts, filter, contactSearch) => {\r\n    switch (filter) {\r\n      case 'show_all':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'frequent_contact':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.frequentlycontacted &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'starred_contact':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.starred && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'engineering_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Engineering' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'support_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Support' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'sales_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Sales' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n  const contacts = useSelector((state) =>\r\n    getVisibleContacts(\r\n      state.contactsReducer.contacts,\r\n      state.contactsReducer.currentFilter,\r\n      state.contactsReducer.contactSearch,\r\n    ),\r\n  );\r\n\r\n  const active = useSelector((state) => state.contactsReducer.contactContent);\r\n  console.log(active);\r\n  return (\r\n    <Nav>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          active={active}\r\n          {...contact}\r\n          onContactClick={() => dispatch(SelectContact(contact.id))}\r\n          onDeleteClick={() => dispatch(DeleteContact(contact.id))}\r\n          onStarredClick={() => dispatch(toggleStarredContact(contact.id))}\r\n        />\r\n      ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactSearch = () => {\r\n  const searchTerm = useSelector((state) => state.contactsReducer.contactSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom d-flex\">\r\n      <Button close className=\"d-xs-block d-xl-none me-2\" />\r\n      <Form className=\"flex-grow-1\">\r\n        <Input\r\n          className=\"form-control mb-2\"\r\n          id=\"searchUser\"\r\n          name=\"searchUser\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchContact(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Contact...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactSearch;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Input } from 'reactstrap';\r\nimport { isEdit, UpdateContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactDetails = () => {\r\n  const contactDetail = useSelector(\r\n    (state) => state.contactsReducer.contacts[state.contactsReducer.contactContent - 1],\r\n  );\r\n\r\n  const editContact = useSelector((state) => state.contactsReducer.editContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {contactDetail ? (\r\n        <div>\r\n          {/***********Contact Topbar**************/}\r\n          <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n            <div className=\"\">\r\n              <img src={contactDetail.image} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n            </div>\r\n            <div className=\"mx-2\">\r\n              <h5 className=\"mb-0\">\r\n                {contactDetail.firstname} {contactDetail.lastname}\r\n              </h5>\r\n              <small>{contactDetail.department}</small>\r\n            </div>\r\n          </div>\r\n\r\n          {/***********Contact Edit box**************/}\r\n          <div className=\"p-4\">\r\n            {!editContact ? (\r\n              <table className=\"table table-borderless\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td width=\"150\">\r\n                      <h6>Firstname </h6>\r\n                    </td>\r\n                    <td>: {contactDetail.firstname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Lastname</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.lastname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Company</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.company}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Department</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.department}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Email</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.email}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Phone</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.phone}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Address</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.address}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Note</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.notes}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td />\r\n                    <td>\r\n                      <Button color=\"primary\" onClick={() => dispatch(isEdit())}>\r\n                        Edit Contact\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <>\r\n                {/***********Contact form box**************/}\r\n                <table className=\"table table-borderless align-middle\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td width=\"150\">\r\n                        <h6>Firstname </h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={contactDetail.firstname}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'firstname', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Lastname</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastname\"\r\n                          id=\"lastname\"\r\n                          value={contactDetail.lastname}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'lastname', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Company</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"company\"\r\n                          id=\"company\"\r\n                          value={contactDetail.company}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'company', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Department</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"department\"\r\n                          id=\"department\"\r\n                          value={contactDetail.department}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'department', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Email</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          value={contactDetail.email}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'email', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Phone</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phone\"\r\n                          id=\"phone\"\r\n                          value={contactDetail.phone}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'phone', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Address</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={contactDetail.address}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'address', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Note</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"notes\"\r\n                          id=\"notes\"\r\n                          value={contactDetail.notes}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'notes', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td />\r\n                      <td>\r\n                        <Button color=\"success\" onClick={() => dispatch(isEdit())}>\r\n                          Save Contact\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        'Please Select The contact'\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport user1 from '../../../assets/images/users/user1.jpg';\r\nimport { addContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactAdd = ({ click }) => {\r\n  const id = useSelector((state) => state.contactsReducer.contacts.length);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = React.useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    department: '',\r\n    company: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    notes: '',\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addContact(\r\n        id,\r\n        values.firstname,\r\n        values.lastname,\r\n        user1,\r\n        values.department,\r\n        values.company,\r\n        values.phone,\r\n        values.email,\r\n        values.address,\r\n        values.notes,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col md={6} className=\"text-center\">\r\n            <img src={user1} className=\"rounded-circle\" alt={id} width=\"100\" />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"firstName\">First Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                id=\"firstName\"\r\n                value={values.firstname}\r\n                onChange={(e) => setValues({ ...values, firstname: e.target.value })}\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastName\">Last Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                id=\"lastName\"\r\n                value={values.lastname}\r\n                onChange={(e) => setValues({ ...values, lastname: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"department\">Department</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"department\"\r\n                id=\"department\"\r\n                value={values.department}\r\n                onChange={(e) => setValues({ ...values, department: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"company\">Company</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"company\"\r\n                id=\"company\"\r\n                value={values.company}\r\n                onChange={(e) => setValues({ ...values, company: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"phone\">Phone</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"phone\"\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                value={values.phone}\r\n                onChange={(e) => setValues({ ...values, phone: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={values.email}\r\n                onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"address\">Address</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                value={values.address}\r\n                onChange={(e) => setValues({ ...values, address: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"notes\">Notes</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"textarea\"\r\n                name=\"notes\"\r\n                id=\"notes\"\r\n                value={values.notes}\r\n                onChange={(e) => setValues({ ...values, notes: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={click}\r\n          disabled={values.firstname.length === 0 || values.notes.length === 0}\r\n        >\r\n          Add Contact\r\n        </Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactAdd.propTypes = {\r\n  click: PropTypes.any,\r\n};\r\n\r\nexport default ContactAdd;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup, ListGroupItem, Button, Modal, ModalHeader } from 'reactstrap';\r\nimport { setVisibilityFilter } from '../../../store/apps/contacts/ContactSlice';\r\nimport ContactAdd from './ContactAdd';\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const active = useSelector((state) => state.contactsReducer.currentFilter);\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-3 border-bottom\">\r\n        <Button color=\"danger\" block onClick={toggle}>\r\n          Add New Contact\r\n        </Button>\r\n      </div>\r\n      <ListGroup flush>\r\n        <h6 className=\"px-3 pt-3\">Filter </h6>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'show_all' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('show_all'))}\r\n        >\r\n          <i className=\"bi bi-people mx-1\" /> All\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'frequent_contact' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('frequent_contact'))}\r\n        >\r\n          <i className=\"bi bi-bezier mx-1\" /> Frequent\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'starred_contact' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('starred_contact'))}\r\n        >\r\n          <i className=\"bi bi-star mx-1\" /> Starred\r\n        </ListGroupItem>\r\n        <div className=\"border-bottom py-2 mb-2\" />\r\n        <h6 className=\"px-3 pt-3\">Filter By Categories</h6>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={\r\n            active === 'engineering_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'\r\n          }\r\n          onClick={() => dispatch(setVisibilityFilter('engineering_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Engineering\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'support_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('support_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Support\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'sales_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('sales_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Sales\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n      {/***********Contact Add Box**************/}\r\n      <Modal isOpen={modal} toggle={toggle} size=\"md\">\r\n        <ModalHeader toggle={toggle}>Add Contact</ModalHeader>\r\n        <ContactAdd click={toggle} />\r\n      </Modal>\r\n      {/***********Contact Add Box End**************/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ContactList from '../../../components/apps/contact/ContactList';\r\nimport ContactSearch from '../../../components/apps/contact/ContactSerch';\r\nimport ContactDetails from '../../../components/apps/contact/ContactDetails';\r\nimport ThreeColumn from '../../../components/threeColumn/ThreeColumn';\r\nimport ContactFilter from '../../../components/apps/contact/ContactFilter';\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ThreeColumn\r\n          leftContent={<ContactFilter />}\r\n          middleContent={\r\n            <>\r\n              <ContactSearch />\r\n              <ContactList />\r\n            </>\r\n          }\r\n          rightContent={<ContactDetails />}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { ToggleInnerRightPart } from '../../store/customizer/CustomizerSlice';\r\n\r\nconst ThreeColumn = ({ leftContent, middleContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const isRightOpen = useSelector((state) => state.customizer.isInnerRightPart);\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox threeColumn\">\r\n      <div className={`leftPart bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-xl-none openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"middlePart flex-shrink-0\">\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{middleContent}</SimpleBar>\r\n      </div>\r\n      <div className={`rightPart bg-white ${isRightOpen ? 'showRightPart' : ''}`}>\r\n        <Button\r\n          close\r\n          onClick={() => dispatch(ToggleInnerRightPart())}\r\n          className=\"position-absolute closeRbtn d-lg-none\"\r\n        />\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{rightContent}</SimpleBar>\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nThreeColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  middleContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default ThreeColumn;\r\n"],"sourceRoot":""}