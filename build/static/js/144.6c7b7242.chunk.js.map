{"version":3,"sources":["views/form-validation/FormValidation.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js"],"names":["FormValidate","useForm","register","handleSubmit","errors","useState","firstname","lastname","email","age","title","mobile","developer","Formvalue","setFormvalue","sm","onSubmit","data","className","htmlFor","type","name","ref","required","username","pattern","maxLength","minLength","value","check","inline","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","CreationModification","details","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/144.6c7b7242.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Button, FormGroup, Label, ListGroup, ListGroupItem, Input } from 'reactstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport Form from 'react-validation/build/form';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\n\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nconst FormValidate = () => {\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n  const [Formvalue, setFormvalue] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    age: '',\r\n    title: '',\r\n    mobile: '',\r\n    developer: '',\r\n  });\r\n  const onSubmit = (data) => {\r\n    setFormvalue(data);\r\n  };\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <ComponentCard title=\"Form Validation\">\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"firstname\">\r\n                  First name *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.firstname && 'First name is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"lastname\">\r\n                  Last name *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.lastname && 'Last name is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"username\">\r\n                  Username *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    ref={register({ required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.username && 'Username is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"email\">\r\n                  Email *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern: /^\\S+@\\S+$/i,\r\n                    })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.email && 'Email is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"mobile\">\r\n                  Mobile No *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"mobile\"\r\n                    ref={register({ required: true, maxLength: 11, minLength: 8 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">\r\n                  {errors.mobile && 'Enter a Valid mobile number.'}\r\n                </span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"age\">\r\n                  Age *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    ref={register({ required: true, pattern: /\\d+/ })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.age && 'Please enter number for age.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"title\">\r\n                  Select Gender *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <select name=\"title\" className=\"form-control\" ref={register({ required: true })}>\r\n                    <option value=\"\">Select Option</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Mrs\">Mrs</option>\r\n                    <option value=\"Miss\">Miss</option>\r\n                  </select>\r\n                </div>\r\n                <span className=\"text-danger\">{errors.title && 'Please select value.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Are you a developer?</Label>\r\n                <br />\r\n                <FormGroup check inline>\r\n                  <Input\r\n                    name=\"developer\"\r\n                    type=\"radio\"\r\n                    value=\"Yes\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  <Label check>Yes</Label>\r\n                </FormGroup>\r\n                <FormGroup check inline>\r\n                  <Input\r\n                    name=\"developer\"\r\n                    type=\"radio\"\r\n                    value=\"No\"\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  <Label check>No</Label>\r\n                </FormGroup>\r\n                {/* <FormGroup>\r\n                  <Label>\r\n                    <input\r\n                      name=\"developer\"\r\n                      type=\"radio\"\r\n                      value=\"Yes\"\r\n                      ref={register({ required: true })}\r\n                    />{' '}\r\n                    Yes\r\n                  </Label>\r\n\r\n                  <Label className=\"ml-3\">\r\n                    <input\r\n                      name=\"developer\"\r\n                      type=\"radio\"\r\n                      value=\"No\"\r\n                      ref={register({ required: true })}\r\n                    />{' '}\r\n                    No\r\n                  </Label>\r\n                </FormGroup> */}\r\n                <span className=\"text-danger\">{errors.developer && 'Please select value.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button className=\"button btn-info\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n            <hr />\r\n            <h4 className=\"mt-5\">Check Data after form submit</h4>\r\n            <ListGroup>\r\n              <ListGroupItem>Firstname: {Formvalue.firstname}</ListGroupItem>\r\n              <ListGroupItem>Lirstname: {Formvalue.lastname}</ListGroupItem>\r\n              <ListGroupItem>Username: {Formvalue.username}</ListGroupItem>\r\n              <ListGroupItem>Age: {Formvalue.age}</ListGroupItem>\r\n              <ListGroupItem>Email Id: {Formvalue.email}</ListGroupItem>\r\n              <ListGroupItem>Mobile No: {Formvalue.mobile}</ListGroupItem>\r\n              <ListGroupItem>Gender: {Formvalue.title}</ListGroupItem>\r\n              <ListGroupItem>Are you developer?: {Formvalue.developer}</ListGroupItem>\r\n            </ListGroup>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormValidate;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}