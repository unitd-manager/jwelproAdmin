{"version":3,"sources":["views/ui/Popover.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js"],"names":["PopoverItem","props","useState","popoverOpen","setPopoverOpen","toggle","className","color","id","onClick","bind","item","text","placement","isOpen","target","PopoverComponent","xs","md","title","map","popover","i","BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","active","CreationModification","details","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"8KAOMA,EAAc,SAACC,GACnB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAS,kBAAMD,GAAgBD,IAErC,OACE,iCACE,cAAC,IAAD,CACEG,UAAU,OACVC,MAAM,kBACNC,GAAE,kBAAaP,EAAMO,IACrBC,QAASJ,EAAOK,KAAK,MAJvB,SAMGT,EAAMU,KAAKC,OAEd,eAAC,KAAD,CACEC,UAAWZ,EAAMU,KAAKE,UACtBC,OAAQX,EACRY,OAAM,kBAAad,EAAMO,IACzBH,OAAQA,EAAOK,KAAK,MAJtB,UAME,cAAC,KAAD,4BACA,cAAC,KAAD,6IA6COM,UApCU,WAoBvB,OACE,gCACE,cAAC,IAAD,IACA,cAAC,KAAD,UACE,cAAC,IAAD,CAAKC,GAAG,KAAKC,GAAG,KAAhB,SACE,cAAC,UAAD,CAAeC,MAAM,WAArB,SAxBS,CACf,CACEN,UAAW,MACXD,KAAM,OAER,CACEC,UAAW,SACXD,KAAM,UAER,CACEC,UAAW,OACXD,KAAM,QAER,CACEC,UAAW,QACXD,KAAM,UAUUQ,KAAI,SAACC,EAASC,GAAV,OACZ,cAACtB,EAAD,CAAqCW,KAAMU,EAASb,GAAIc,GAAtCD,EAAQR,yB,iCCjExC,mCAwBeU,IApBK,SAACC,GACnB,IAAMC,EAAWC,cACXC,EAAWF,EAASG,SAASC,MAAM,KAAK,GACxCC,EAAYL,EAASG,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKL,EAAKO,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAM5B,UAAU,uBAA5C,kBAGCqB,EAAW,cAAC,IAAD,CAAgBQ,QAAM,EAAtB,SAAwBR,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBK,QAAM,EAAtB,SAAwBL,IAA8B,W,kECd5D,SAASM,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAATlB,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWc,IAAI,KAAK3B,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMa,IACLkB,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,gDAAmBA,GAAWA,EAAQC,WAAtC,IAAmDD,GAAWA,EAAQE,mBAExE,cAAC,KAAD,CAAKjC,UAAU,SAAf,SACE,gDAAmB+B,GAAWA,EAAQG,YAAtC,IAAoDH,GAAWA,EAAQI,iCCOxEC,UAvBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUxB,EAA+C,EAA/CA,MAAOyB,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMvC,UAAU,cAAhB,UACE,cAAC8B,EAAD,CAAsBC,QAASQ,EAA0B1B,MAAOA,IAKhE,eAAC,IAAD,CAAUb,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CsC,GAAY,KACvD,8BAAMD","file":"static/js/161.5af96c3d.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Button, Popover, PopoverHeader, PopoverBody, Row, Col } from 'reactstrap';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\n\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nconst PopoverItem = (props) => {\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  return (\r\n    <span>\r\n      <Button\r\n        className=\"me-1\"\r\n        color=\"outline-primary\"\r\n        id={`Popover-${props.id}`}\r\n        onClick={toggle.bind(null)}\r\n      >\r\n        {props.item.text}\r\n      </Button>\r\n      <Popover\r\n        placement={props.item.placement}\r\n        isOpen={popoverOpen}\r\n        target={`Popover-${props.id}`}\r\n        toggle={toggle.bind(null)}\r\n      >\r\n        <PopoverHeader>Popover Title</PopoverHeader>\r\n        <PopoverBody>\r\n          Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem\r\n          lacinia quam venenatis vestibulum.\r\n        </PopoverBody>\r\n      </Popover>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst PopoverComponent = () => {\r\n  const popovers = [\r\n    {\r\n      placement: 'top',\r\n      text: 'Top',\r\n    },\r\n    {\r\n      placement: 'bottom',\r\n      text: 'Bottom',\r\n    },\r\n    {\r\n      placement: 'left',\r\n      text: 'Left',\r\n    },\r\n    {\r\n      placement: 'right',\r\n      text: 'Right',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col xs=\"12\" md=\"12\">\r\n          <ComponentCard title=\"Popovers\">\r\n            {popovers.map((popover, i) => (\r\n              <PopoverItem key={popover.placement} item={popover} id={i} />\r\n            ))}\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopoverComponent;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}