{"version":3,"sources":["views/apps/calendar/EventData.js","views/apps/calendar/CalendarApp.js"],"names":["today","Date","y","getFullYear","m","getMonth","d","getDate","EventData","title","allDay","start","end","color","moment","locale","localizer","momentLocalizer","CalendarApp","useState","calevents","setCalEvents","React","open","setOpen","setTitle","slot","setSlot","setColor","update","setUpdate","selectable","events","defaultView","scrollToTime","defaultDate","style","height","onSelectEvent","event","newEditEvent","find","elem","editEvent","onSelectSlot","slotInfo","addNewEventAlert","eventPropGetter","className","eventColors","isOpen","toggle","onSubmit","e","preventDefault","map","newEvents","push","target","reset","id","placeholder","value","onChange","eColor","colorbg","size","onClick","type","outline","updatecalEvents","filter","ind","deleteHandler","disabled"],"mappings":"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","file":"static/js/167.324e3bcb.chunk.js","sourcesContent":["const today = new Date();\r\nconst y = today.getFullYear();\r\nconst m = today.getMonth();\r\nconst d = today.getDate();\r\n\r\nconst EventData = [\r\n  {\r\n    title: 'Twice event For two Days',\r\n    allDay: true,\r\n    start: new Date(y, m, 3),\r\n    end: new Date(y, m, 5),\r\n    color: 'primary',\r\n  },\r\n  {\r\n    title: 'Learn ReactJs',\r\n    start: new Date(y, m, d + 3, 10, 30),\r\n    end: new Date(y, m, d + 3, 11, 30),\r\n    allDay: false,\r\n    color: 'success',\r\n  },\r\n  {\r\n    title: 'Launching MaterialArt Angular',\r\n    start: new Date(y, m, d + 7, 12, 0),\r\n    end: new Date(y, m, d + 7, 14, 0),\r\n    allDay: false,\r\n    color: 'danger',\r\n  },\r\n  {\r\n    title: 'Lunch with Mr.Raw',\r\n    start: new Date(y, m, d - 2),\r\n    end: new Date(y, m, d - 2),\r\n    allDay: true,\r\n    color: 'info',\r\n  },\r\n  {\r\n    title: 'Going For Party of Sahs',\r\n    start: new Date(y, m, d + 1, 19, 0),\r\n    end: new Date(y, m, d + 1, 22, 30),\r\n    allDay: false,\r\n    color: 'info',\r\n  },\r\n  {\r\n    title: 'Learn Ionic',\r\n    start: new Date(y, m, 23),\r\n    end: new Date(y, m, 25),\r\n    color: 'warning',\r\n  },\r\n  {\r\n    title: 'Research of making own Browser',\r\n    start: new Date(y, m, 19),\r\n    end: new Date(y, m, 22),\r\n    color: 'primary',\r\n  },\r\n];\r\n\r\nexport default EventData;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Form,\r\n} from 'reactstrap';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport EventData from './EventData';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport './calendar.scss';\r\n\r\nmoment.locale('en-GB');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarApp = () => {\r\n  const [calevents, setCalEvents] = useState(EventData);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [slot, setSlot] = useState();\r\n  const [color, setColor] = useState('default');\r\n  const [update, setUpdate] = useState();\r\n\r\n  const ColorVariation = [\r\n    {\r\n      id: 1,\r\n      eColor: '#1a97f5',\r\n      value: 'primary',\r\n    },\r\n    {\r\n      id: 2,\r\n      eColor: '#00ab55',\r\n      value: 'success',\r\n    },\r\n    {\r\n      id: 3,\r\n      eColor: '#fc4b6c',\r\n      value: 'danger',\r\n    },\r\n    {\r\n      id: 4,\r\n      eColor: '#1e4db7',\r\n      value: 'info',\r\n    },\r\n    {\r\n      id: 5,\r\n      eColor: '#fdd43f',\r\n      value: 'warning',\r\n    },\r\n  ];\r\n  const addNewEventAlert = (slotInfo) => {\r\n    setOpen(true);\r\n    setSlot(slotInfo);\r\n  };\r\n  const editEvent = (event) => {\r\n    setOpen(true);\r\n    const newEditEvent = calevents.find((elem) => elem.title === event.title);\r\n    setColor(event.color);\r\n    setTitle(newEditEvent.title);\r\n    setColor(newEditEvent.color);\r\n    setUpdate(event);\r\n  };\r\n  const updateEvent = (e) => {\r\n    e.preventDefault();\r\n\r\n    setCalEvents(\r\n      calevents.map((elem) => {\r\n        if (elem.title === update.title) {\r\n          return { ...elem, title, color };\r\n        }\r\n        return elem;\r\n      }),\r\n    );\r\n    setOpen(false);\r\n    setTitle('');\r\n    setColor('');\r\n    setUpdate(null);\r\n  };\r\n  const inputChangeHandler = (e) => setTitle(e.target.value);\r\n\r\n  const selectinputChangeHandler = (id) => setColor(id);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newEvents = calevents;\r\n    newEvents.push({\r\n      title,\r\n      start: slot.start,\r\n      end: slot.end,\r\n      color,\r\n    });\r\n    setOpen(false);\r\n    e.target.reset();\r\n\r\n    setCalEvents(newEvents);\r\n    setTitle('');\r\n  };\r\n  const deleteHandler = (event) => {\r\n    const updatecalEvents = calevents.filter((ind) => ind.title !== event.title);\r\n    setCalEvents(updatecalEvents);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTitle('');\r\n    setUpdate(null);\r\n  };\r\n\r\n  const eventColors = (event) => {\r\n    if (event.color) {\r\n      return { className: `event-${event.color}` };\r\n    }\r\n    return { className: `event-default` };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <Calendar\r\n            selectable\r\n            events={calevents}\r\n            defaultView=\"month\"\r\n            scrollToTime={new Date(1970, 1, 1, 6)}\r\n            defaultDate={new Date()}\r\n            localizer={localizer}\r\n            style={{ height: 'calc(100vh - 350px' }}\r\n            onSelectEvent={(event) => editEvent(event)}\r\n            onSelectSlot={(slotInfo) => addNewEventAlert(slotInfo)}\r\n            eventPropGetter={(event) => eventColors(event)}\r\n          />\r\n          <Modal isOpen={open}>\r\n            <ModalHeader toggle={handleClose}>{update ? 'Update Event' : 'Add Event'}</ModalHeader>\r\n            <Form onSubmit={update ? updateEvent : submitHandler}>\r\n              <ModalBody>\r\n                <h6>Event Title</h6>\r\n                <Input\r\n                  id=\"Event Title\"\r\n                  placeholder=\"Enter Event Title\"\r\n                  value={title}\r\n                  onChange={inputChangeHandler}\r\n                />\r\n                <br />\r\n                <h6>Select Event Color</h6>\r\n                <div className=\"button-group\">\r\n                  {ColorVariation.map((colorbg) => (\r\n                    <Button\r\n                      color={colorbg.value}\r\n                      key={colorbg.eColor}\r\n                      size=\"sm\"\r\n                      onClick={() => selectinputChangeHandler(colorbg.value)}\r\n                    >\r\n                      {colorbg.value === color ? (\r\n                        <i className=\"bi bi-check\" />\r\n                      ) : (\r\n                        <i className=\"bi bi-circle\" />\r\n                      )}\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                {update ? (\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"danger\"\r\n                    outline\r\n                    onClick={() => deleteHandler(update)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <Button type=\"submit\" color=\"success\" disabled={!title}>\r\n                  {update ? 'Update' : 'Add'}\r\n                </Button>\r\n              </ModalFooter>\r\n            </Form>\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarApp;\r\n"],"sourceRoot":""}