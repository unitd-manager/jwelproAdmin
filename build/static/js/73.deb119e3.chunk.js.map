{"version":3,"sources":["components/Message.js","views/EditData/BroadCastsEdit.js","components/CreationModification.js","components/ComponentCard.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","components/Tab.js","../node_modules/react-feather/dist/icons/image.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/CategoryDetailComp.js"],"names":["message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","BroadCastsEdit","useState","broadcast_id","city","insertTimeSheet","setInsertTimesheet","categoryDetails","setbroadcast","activeTab","setActiveTab","attachmentModal","setAttachmentModal","RoomName","setRoomName","fileTypes","setFileTypes","modelType","pictureData","setDataForPicture","pictureupdate","setPictureUpdate","navigate","useNavigate","addContactModalss","setAddContactModalss","taskdetail","setTaskDetail","selectedTasks","setSelectedTasks","milestones","setMilestones","addContactToggless","id","useParams","inserttimeSheets","length","api","post","country","join","contactResponse","data","forEach","contact","newContactWithCompany","contact_id","response","insertedDataId","insertId","console","log","filteredContacts","setFilteredContacts","setCountry","useEffect","get","then","res","catch","className","editCategoryData","title","applyChanges","saveChanges","category_title","backToList","handleInputs","e","target","name","value","toggle","tab","tabs","tabId","xs","md","color","onClick","width","moduleId","roomName","altTagData","desc","recordType","mediaType","update","setUpdate","bind","size","isOpen","onChange","handleInputsTime","map","key_text","check","checked","includes","citi_value","event","selectedTask","filter","task","selectedCountry","first_name","CreationModification","details","tag","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","pStyle","textAlign","marginRight","oStyle","outline","border","ComponentCardV2","style","AttachmentModalV2","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","multiple","handleChange","fiels","arrayOfObj","Object","entries","types","role","FormData","ele","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","window","location","reload","ViewFileComponentV2","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","Tab","useSearchParams","searchParams","setSearchParams","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName","CategoryButton","setTimeout","CategoryDetailComp","section","valuelist","section_id","defaultValue","section_title","category_type","internal_link","defaultChecked","published","meta_title","meta_description","meta_keyword","seo_title"],"mappings":"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","file":"static/js/73.deb119e3.chunk.js","sourcesContent":["import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Modal,\r\n  ModalBody,\r\n  CardBody,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  Card,\r\n} from 'reactstrap';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport message from '../../components/Message';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport api from '../../constants/api';\r\nimport Tab from '../../components/Tab';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nconst BroadCastsEdit = () => {\r\n  const [insertTimeSheet, setInsertTimesheet] = useState({\r\n    broadcast_id: '',\r\n    city: '',\r\n  });\r\n  const [categoryDetails, setbroadcast] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureupdate, setPictureUpdate] = useState(false);\r\n  // Change state for task selection to store an array of selected tasks\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const navigate = useNavigate();\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/BroadCast');\r\n    }\r\n  };\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n  const backToList = () => {\r\n    navigate('/BroadCast');\r\n  };\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n  const tabs = [\r\n    { id: '1', name: 'Attachment' },\r\n    { id: '2', name: 'BroadCast List' },\r\n  ];\r\n\r\n  //get staff details\r\n  const [addContactModalss, setAddContactModalss] = useState(false);\r\n  const [taskdetail, setTaskDetail] = useState([]);\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  \r\n  const [milestones, setMilestones] = useState([]);\r\n  //const [employeeTime, setEmployee] = useState();\r\n  const addContactToggless = () => {\r\n    setAddContactModalss(!addContactModalss);\r\n  };\r\n  // Gettind data from Job By Id\r\n  const editJobById = () => {\r\n    api\r\n      .get('/valuelist/getCountryValuelist')\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        //setEmployee(res.data.data);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  const { id } = useParams();\r\n\r\n  const handleInputs = (e) => {\r\n    setbroadcast({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Milestone data in milestoneDetails\r\n  const handleInputsTime = (e) => {\r\n    setInsertTimesheet({ ...insertTimeSheet, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // const inserttimeSheets = () => {\r\n  //   insertTimeSheet.broadcast_id = id;\r\n\r\n  //   api.post('/content/insertBroadcastConntact', insertTimeSheet)\r\n  //   .then(() => {\r\n  //     message('country inserted successfully.', 'success');\r\n\r\n  //   });\r\n  // };\r\n\r\n  const inserttimeSheets = async () => {\r\n    try {\r\n      if (selectedTasks.length === 0) {\r\n        message('Please select at least one task.', 'warning');\r\n        return;\r\n      }\r\n\r\n      const contactResponse = await api.post('/contact/getContactByCountrycities', {\r\n        country: insertTimeSheet.country,\r\n        city: selectedTasks.join(','), // Join selected cities into a comma-separated string\r\n      });\r\n\r\n      if (contactResponse?.data?.data && contactResponse.data.data.length > 0) {\r\n        contactResponse.data.data.forEach(async (contact) => {\r\n          const newContactWithCompany = {\r\n            ...insertTimeSheet,\r\n            contact_id: contact.contact_id,\r\n            city: selectedTasks,\r\n          };\r\n          newContactWithCompany.broadcast_id = id;\r\n\r\n          const response = await api.post(\r\n            '/content/insertBroadcastConntact',\r\n            newContactWithCompany,\r\n          );\r\n\r\n          if (response.data.success) {\r\n            const insertedDataId = response.data.data.insertId;\r\n            console.log(`Inserted data for contact_id ${contact.contact_id}: ${insertedDataId}`);\r\n          } else {\r\n            console.error(`Error inserting data for contact_id ${contact.contact_id}`);\r\n            message('Network connection error.', 'error');\r\n          }\r\n        });\r\n\r\n        message('Contacts inserted successfully.', 'success');\r\n        setSelectedTasks([]);\r\n      } else {\r\n        console.error('No contact records found for the selected country and city.');\r\n        message('No contact records found for the selected country and city.', 'error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error inserting time sheets:', error);\r\n      message('Error inserting time sheets.', 'error');\r\n    }\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/content/getBroadCastById', { broadcast_id: id })\r\n      .then((res) => {\r\n        setbroadcast(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n\r\n  const getMilestoneName = () => {\r\n    api\r\n      .get('/valuelist/getCountryValuelist')\r\n      .then((res) => {\r\n        setMilestones(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Milestone not found', 'info');\r\n      });\r\n  };\r\n\r\n  // Api call for getting milestone dropdown based on project ID\r\n  const getTaskName = () => {\r\n    api\r\n      .get('/valuelist/getCitiesvalue')\r\n      .then((res) => {\r\n        setTaskDetail(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Task not found', 'info');\r\n      });\r\n  };\r\n  // ... (other JSX code)\r\n \r\n\r\n  const editCategoryData = () => {\r\n    if (categoryDetails.title !== '') {\r\n      api\r\n        .post('/content/editBroadCast', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n \r\n \r\n\r\n  // const handleFilterChange = (selectedCountry) => {\r\n  //   // Update the filtered contacts based on the selected country\r\n  //   setFilteredContacts(country.filter((contact) => contact.country === selectedCountry));\r\n  // };\r\n  const [filteredContacts, setFilteredContacts] = useState([]);\r\n  const [country, setCountry] = useState([]);\r\n\r\n  const getContactcountryName = () => {\r\n    api\r\n      .post('/content/getBroadCastcountryById', { broadcast_id: id })\r\n      .then((res) => {\r\n        setCountry(res.data.data);\r\n        // Set filtered contacts initially with all contacts\r\n        //setFilteredContacts(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Milestone not found', 'info');\r\n      });\r\n  };\r\n  console.log(\"\",categoryDetails)\r\n  const handleFilterChange = (selectedCountry) => {\r\n    // Update the filtered contacts based on the selected country\r\n    if (selectedCountry === 'selected') {\r\n      setFilteredContacts(country); // Show all contacts when \"Please Select\" is chosen\r\n    } else {\r\n      setFilteredContacts(country.filter((contact) => contact.country === selectedCountry));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    editJobById();\r\n    getContactcountryName();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    getMilestoneName();\r\n    CategoryById();\r\n    getTaskName();\r\n    //getCityName();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MainDiv\">\r\n        <div className=\" pt-xs-25\">\r\n          <br />\r\n          {/* Button */}\r\n          <CategoryButton\r\n            editCategoryData={editCategoryData}\r\n            navigate={navigate}\r\n            applyChanges={applyChanges}\r\n            saveChanges={saveChanges}\r\n            backToList={backToList}\r\n            id={id}\r\n          ></CategoryButton>\r\n\r\n          {/* More details*/}\r\n          <CategoryDetailComp\r\n            categoryDetails={categoryDetails}\r\n            handleInputs={handleInputs}\r\n          ></CategoryDetailComp>\r\n          <ComponentCard title=\"More Details\">\r\n            <ToastContainer></ToastContainer>\r\n            <Tab toggle={toggle} tabs={tabs} />\r\n            <TabContent className=\"p-4\" activeTab={activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            setRoomName('Category');\r\n                            setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'OGG', 'MP3', 'WAV', 'M4A']);\r\n                            dataForPicture();\r\n                            setAttachmentModal(true);\r\n                          }}\r\n                        >\r\n                          <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <AttachmentModalV2\r\n                      moduleId={id}\r\n                      attachmentModal={attachmentModal}\r\n                      setAttachmentModal={setAttachmentModal}\r\n                      roomName={RoomName}\r\n                      fileTypes={fileTypes}\r\n                      altTagData=\"Category Data\"\r\n                      desc=\"Category Data\"\r\n                      recordType=\"Picture\"\r\n                      mediaType={pictureData.modelType}\r\n                      update={pictureupdate}\r\n                      setUpdate={setPictureUpdate}\r\n                    />\r\n                    <ViewFileComponentV2\r\n                      moduleId={id}\r\n                      roomName=\"Category\"\r\n                      recordType=\"Picture\"\r\n                      update={pictureupdate}\r\n                      setUpdate={setPictureUpdate}\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"shadow-none\"\r\n                      onClick={addContactToggless.bind(null)}\r\n                    >\r\n                      Add New{' '}\r\n                    </Button>\r\n                    <Modal\r\n                      size=\"lg\"\r\n                      isOpen={addContactModalss}\r\n                      toggle={addContactToggless.bind(null)}\r\n                    >\r\n                      <ModalHeader toggle={addContactToggless.bind(null)}>New Task</ModalHeader>\r\n                      <ModalBody>\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <Card>\r\n                              <CardBody>\r\n                                <Form>\r\n                                  <Row>\r\n                                    <Col md=\"4\">\r\n                                      <Label>Country</Label>\r\n                                      <FormGroup>\r\n                                        <Input\r\n                                          type=\"select\"\r\n                                          onChange={(e) => {\r\n                                            handleInputsTime(e);\r\n                                          }}\r\n                                          value={insertTimeSheet && insertTimeSheet.country}\r\n                                          name=\"country\"\r\n                                        >\r\n                                          <option value=\"selected\">Please Select</option>\r\n                                          {milestones &&\r\n                                            milestones.map((e) => {\r\n                                              return (\r\n                                                <option key={e.key_text} value={e.value}>\r\n                                                  {' '}\r\n                                                  {e.value}{' '}\r\n                                                </option>\r\n                                              );\r\n                                            })}\r\n                                        </Input>\r\n                                      </FormGroup>\r\n                                    </Col>\r\n                                    {insertTimeSheet.country &&\r\n                                      insertTimeSheet.country !== 'selected' && ( // Render cities only if a country is selected\r\n                                        <Col md=\"4\">\r\n                                          <FormGroup>\r\n                                            <Label>cities</Label>\r\n\r\n                                            {taskdetail &&\r\n                                              taskdetail.map((e) => (\r\n                                                <FormGroup check key={e.value}>\r\n                                                  <Label check>\r\n                                                    <Input\r\n                                                      type=\"checkbox\"\r\n                                                      value={e.value}\r\n                                                      // value={insertTimeSheet && insertTimeSheet.city}\r\n                                                      // name=\"city\"\r\n                                                      checked={selectedTasks.includes(e.citi_value)}\r\n                                                      onChange={(event) => {\r\n                                                        const selectedTask = e.citi_value;\r\n                                                        if (event.target.checked) {\r\n                                                          setSelectedTasks([\r\n                                                            ...selectedTasks,\r\n                                                            selectedTask,\r\n                                                          ]);\r\n                                                        } else {\r\n                                                          setSelectedTasks(\r\n                                                            selectedTasks.filter(\r\n                                                              (task) => task !== selectedTask,\r\n                                                            ),\r\n                                                          );\r\n                                                        }\r\n                                                      }}\r\n                                                    />\r\n                                                    {e.citi_value}\r\n                                                  </Label>\r\n                                                </FormGroup>\r\n                                              ))}\r\n                                          </FormGroup>\r\n                                        </Col>\r\n                                      )}\r\n                                  </Row>\r\n                                </Form>\r\n                              </CardBody>\r\n                            </Card>\r\n                          </Col>\r\n                        </Row>\r\n                      </ModalBody>\r\n                      <ModalFooter>\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            inserttimeSheets();\r\n                          }}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          className=\"shadow-none\"\r\n                          onClick={addContactToggless.bind(null)}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </ModalFooter>\r\n                    </Modal>\r\n                  </FormGroup>\r\n                </Form>\r\n                <ComponentCard title=\"Summary\">\r\n                  <Col md=\"2\">\r\n                    <FormGroup>\r\n                      <Label>country</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"country\"\r\n                        onChange={(e) => {\r\n                          handleFilterChange(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Please Select</option>\r\n                        {milestones &&\r\n                          milestones.map((e) => {\r\n                            return (\r\n                              <option key={e.key_text} value={e.value}>\r\n                                {' '}\r\n                                {e.value}{' '}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>First Name</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Country</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>city</Label>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {filteredContacts.map((contact) => (\r\n                    <Row key={contact.contact_id}>\r\n                      <Col>\r\n                        <FormGroup>{contact && contact.first_name}</FormGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>{contact && contact.country}</FormGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>{contact && contact.city}</FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  ))}\r\n                </ComponentCard>\r\n              </TabPane>\r\n            </TabContent>\r\n          </ComponentCard>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BroadCastsEdit;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://emsweb.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function CategoryButton({\r\n  editCategoryData,\r\n  // navigate,\r\n  applyChanges,\r\n  saveChanges,\r\n  // id,\r\n  backToList,\r\n}) {\r\n  CategoryButton.propTypes = {\r\n    editCategoryData: PropTypes.any,\r\n    // navigate: PropTypes.func,\r\n    applyChanges: PropTypes.func,\r\n    saveChanges: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    backToList: PropTypes.func,\r\n  };\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"shadow-none\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  saveChanges();\r\n                  setTimeout(() => {\r\n                    navigate('/Category');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  applyChanges();\r\n                  console.log('cancel process');\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"shadow-none\"\r\n                color=\"dark\"\r\n                onClick={(e) => {\r\n                  if (window.confirm('Are you sure you want to cancel? ')) {\r\n                    navigate('/Category');\r\n                  } else {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"category_id\"\r\n              tablename=\"category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function CategoryDetailComp({ categoryDetails, handleInputs, section, valuelist }) {\r\n  CategoryDetailComp.propTypes = {\r\n    categoryDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    section: PropTypes.array,\r\n    valuelist: PropTypes.array,\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n        <ComponentCard title=\"Category Details\"\r\n         creationModificationDate={categoryDetails}>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Title <span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_title}\r\n                    name=\"category_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Section</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.section_id}\r\n                    name=\"section_id\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {section &&\r\n                      section.map((e) => {\r\n                        return <option key={e.section_id} value={e.section_id}>{e.section_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Category Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_type}\r\n                    name=\"category_type\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {valuelist &&\r\n                      valuelist.map((e) => {\r\n                        return <option key={e.value} value={e.value}>{e.value}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Internal Link</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={categoryDetails && categoryDetails.internal_link}\r\n                    onChange={handleInputs}\r\n                    name=\"internal_link\"\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                \r\n                <Label>Published</Label>\r\n                <br></br>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"1\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 1 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label> Yes </Label>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"0\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 0 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label>No</Label>\r\n                \r\n              </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <ComponentCard title=\"Page Meta Data\">\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Title</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_title}\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_title\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Description</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_description}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_description\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Keywords</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_keyword}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_keyword\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n        <FormGroup>\r\n          <Label>SEO Title</Label>\r\n          <Input\r\n            value={categoryDetails && categoryDetails.seo_title}\r\n            type=\"text\"\r\n            onChange={handleInputs}\r\n            name=\"seo_title\"\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <Row></Row>\r\n        </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}