{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","views/detailTable/UserGroupDetails.js","components/CreationModification.js","components/ComponentCard.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","UserGroupDetails","useState","title","userGroupDetails","setUserGroupDetails","section","setSection","navigate","useNavigate","useEffect","api","get","then","res","data","console","log","md","onChange","e","target","name","value","color","onClick","post","insertedDataId","insertId","forEach","elem","user_group_id","catch","err","setTimeout","CreationModification","details","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/125.321e6f14.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\n\r\nconst UserGroupDetails = () => {\r\n  const [userGroupDetails, setUserGroupDetails] = useState({\r\n    title: '',\r\n  });\r\n  const [section, setSection] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  //setting data in ProductDetails\r\n  const handleInputs = (e) => {\r\n    setUserGroupDetails({ ...userGroupDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // get section\r\n  const getSection = () => {\r\n    api.get('/usergroup/getSectionsforusergroup').then((res) => {\r\n      setSection(res.data.data);\r\n      console.log(res.data.data);\r\n    });\r\n  };\r\n\r\n  //Insert Product Data\r\n  const createUserGroup = () => {\r\n    api\r\n      .post('/usergroup/insertUserGroup', userGroupDetails)\r\n      .then((res) => {\r\n        const insertedDataId = res.data.data.insertId;\r\n        console.log(insertedDataId);\r\n        section.forEach((elem) => {\r\n          elem.user_group_id = insertedDataId;\r\n          api\r\n            .post('/usergroup/insertRoomUserGroup', elem)\r\n            .then(() => {})\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        });\r\n        message('UserGroup created successfully.', 'success');\r\n        setTimeout(() => {\r\n          navigate(`/UserGroupEdit/${insertedDataId}`);\r\n        }, 500);\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSection();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Title</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={userGroupDetails && userGroupDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        createUserGroup();\r\n                        setTimeout(() => {\r\n                          navigate('/UserGroupEdit');\r\n                        }, 800);\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate('/UserGroup');\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Go to List\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGroupDetails;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}